{"version":3,"sources":["scenes/MenuScene.js","libs/react-phaser-fiber/PhaserProvider.js","libs/react-phaser-fiber/components/Canvas.js","scenes/IntroScene.js","utils/constants.js","components/objects/GameObject.js","components/objects/Destroyable.js","components/objects/Moveable.js","components/objects/Fallable.js","components/objects/Boulder.js","components/objects/Character.js","components/objects/Enemy.js","components/objects/Player.js","components/objects/Wall.js","components/objects/Ground.js","components/objects/Empty.js","components/objects/Interactive.js","components/objects/Barrel.js","components/objects/Explosion.js","components/objects/Jewel.js","components/Rules.js","components/levels/levelBase.js","components/LevelManager.js","components/levels/level_1.js","components/levels/level_2.js","components/UI.js","scenes/GameScene.js","Game.js","reportWebVitals.js","index.js"],"names":["titlesMusic","context","createContext","PhaserProvider","game","children","useState","ready","setReady","useEffect","Provider","value","Canvas","forwardRef","canvasRef","args","fallbackRef","useRef","ref","setGame","callbacks","postBoot","scene","scenes","events","once","Phaser","Scenes","Events","PRE_RENDER","s","load","on","Loader","COMPLETE","Game","current","MenuScene","this","script","image","process","spritesheet","frameWidth","frameHeight","audio","instances","PROGRESS","console","log","sceneId","props","cameras","main","fade","tweens","add","targets","volume","ease","duration","onComplete","pause","start","window","WebFont","custom","families","active","fadeIn","emit","sys","config","sound","loop","play","WAKE","UPDATE","TRANSITION_WAKE","TRANSITION_START","TRANSITION_OUT","TRANSITION_INIT","TRANSITION_COMPLETE","START","SLEEP","SHUTDOWN","RESUME","RENDER","READY","PAUSE","CREATE","BOOT","currentOption","arrow","graphics","fillStyle","color","alpha","fillTriangle","setPosition","menuOptions","label","disabled","onSelect","navigateToScene","level","forEach","o","idx","text","fontFamily","fontSize","fill","setAlpha","input","keyboard","event","newOption","key","length","Scene","IntroScene","forest","fillRect","renderer","width","height","forestText","container","dark","name","player","partner","animateIntro","bind","pan","Cameras","Scene2D","PAN_COMPLETE","shake","getByName","y","delay","x","TICK_TIME","PIXEL_NAME","EMPTY","PLAYER","GROUND","BOULDER","WALL","ENEMY","JEWEL","BARREL","EXPLOSION","INTERACTION","DIRS","DOWN","UP","LEFT","RIGHT","PIXEL_TO_TILEMAP_POSITION","data","W","N","E","S","GameObject","id","isRigid","isBreakable","isFlat","isPickable","isCrushable","power","strength","force","weight","position","alien","isMoveable","coords","className","Destroyable","inactive","el","onDestroy","Moveable","Fallable","isFalling","nextPos","destinationElement","isDestinationInBounds","getObjectAt","destinationIsEmpty","isDestinationEmpty","destinationIsCrushable","destinationInBounds","pathElement","pathClear","objectIsEmpty","restingElement","canRest","canFallDown","canRollTo","Boulder","Character","pushingDirection","neighbour","emptyPlace","canBrakeNeighbour","canMove","nothingBesides","isPositionClear","isAboutToFall","canPush","moveObject","Enemy","moveIntentDir","anchorPosition","constructor","Player","destroy","onCharacterDie","removeListener","onKeyDown","addListener","onKeyUp","repeat","includes","isMoving","playerLoop","off","die","Wall","Ground","tilemap","putTileAt","Empty","isEmpty","Interactive","onInteractWith","Barrel","onExplode","explode","Explosion","layer","map","explosion","tileWidth","tileHeight","setScale","scaleX","tileToWorldX","tileToWorldY","objects","Jewel","visible","onJewelPick","music","Level","moveables","playerTimeoutId","isPaused","phaserScene","r","c","element","boulder","sprite","setOrigin","jewel","barrel","Animations","ANIMATION_COMPLETE","enemy","addToScalables","push","onAddElement","sort","a","b","canFallLeft","canFallRight","enemiesLoop","newAnchor","nextDir","backToTrackDir","nextAnchorPos","helperDirCalc","filter","clearTimeout","canMoveUp","canMoveDown","canMoveLeft","canMoveRight","setFlipX","setTimeout","pos","origin","overrunBy","runningOver","setObjectAt","move","e","row","warn","found","i","j","obj","xInBounds","yInBounds","LEVELS","alert","LevelBase","LevelManager","currentLevel","currentIndex","generateConfig","createMap","connectToScene","resume","levelId","textures","get","getSourceImage","levelConfig","Array","pixColor","getPixel","Display","Color","ComponentToHex","g","levelData","SCALE","camera","tileset","make","addTilesetImage","createBlankLayer","depth","tile","calculateWallTileWithNeighbours","setBounds","scaleY","zoom","Rules","timer","worldTickFreq","onSceneUpdate","setUpPuseResumeGame","setUpCameraFollowPlayer","stop","levels","next","cam","getPlayerPos","smoothFactor","scrollX","scrollY","time","delta","gravityLoop","UI","rockHit","deathByRockHit","levelComplete","Math","round","innerWidth","GameScene","set","scale","scaleMode","Scale","RESIZE","handleScales","createAnimations","scalables","Map","clearScalables","clear","removeFromScalables","delete","updateScale","addEventListener","rows","anims","create","frames","generateFrameNumbers","frameRate","gameConfig","type","AUTO","backgroundColor","disableContextMenu","pixelArt","roundPixels","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","style","bottom","right","version","document","getElementById"],"mappings":"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","file":"static/js/main.ce5f1aa6.chunk.js","sourcesContent":["import Phaser from 'phaser'\n\nlet titlesMusic\nexport default class MenuScene extends Phaser.Scene {\n  constructor () {\n    super('MenuScene');\n  }\n\n  preload () {\n    this.load.script('webfont', 'https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js');\n    this.load.image('main-tiles', process.env.PUBLIC_URL + '/assets/tilemaps/tilemap_20x20.png');\n    this.load.image('level_1', process.env.PUBLIC_URL + '/assets/maps/level_1.png');\n    this.load.image('level_2', process.env.PUBLIC_URL + '/assets/maps/level_2.png');\n    this.load.spritesheet('boulder', process.env.PUBLIC_URL + '/assets/sprites/boulder_sprite.png', { frameWidth: 26, frameHeight: 26 });\n    this.load.spritesheet('brave', process.env.PUBLIC_URL + '/assets/sprites/brave_sprite.png', { frameWidth: 26, frameHeight: 26 });\n    this.load.audio('credits', process.env.PUBLIC_URL + '/assets/audio/Score/Opening Credits_.mp3');\n    this.load.audio('levels_surface', process.env.PUBLIC_URL + '/assets/audio/Score/1st 7 Levels.mp3');\n    this.load.audio('rock_hit', process.env.PUBLIC_URL + '/assets/audio/SFX/RockHit.mp3',{\n      instances: 1\n    });\n    this.load.audio('death_by_rock', process.env.PUBLIC_URL + '/assets/audio/SFX/DeathByRock.mp3')\n    this.load.audio('level_complete', process.env.PUBLIC_URL + '/assets/audio/SFX/Level Finish.mp3')\n    this.load.on(Phaser.Loader.Events.PROGRESS, console.log)\n  }\n\n  navigateToScene(sceneId, props = {}) {\n    this.cameras.main.fade(500, 0, 0, 0)\n    this.tweens.add({  \n      targets: titlesMusic,\n      volume: 0,\n      ease: 'Linear',\n      duration: 500,\n      onComplete: () => {\n        titlesMusic.pause()\n        this.scene.start(sceneId, props)\n      },\n    });\n  }\n\n  create() {\n    window.WebFont.load({\n      custom: {\n          families: [ 'GameGirl' ]\n      },\n      active: () => {\n        this.cameras.main.fadeIn(500, 0, 0, 0)\n        this.events.emit('scene_ready', this.sys.config)\n\n        titlesMusic = this.sound.add('credits', { loop: true });\n        titlesMusic.play()\n        \n        this.events.once(Phaser.Scenes.Events.WAKE, () => console.log(Phaser.Scenes.Events.WAKE))\n        this.events.once(Phaser.Scenes.Events.UPDATE, () => console.log(Phaser.Scenes.Events.UPDATE))\n        this.events.once(Phaser.Scenes.Events.TRANSITION_WAKE, () => console.log(Phaser.Scenes.Events.TRANSITION_WAKE))\n        this.events.once(Phaser.Scenes.Events.TRANSITION_START, () => console.log(Phaser.Scenes.Events.TRANSITION_START))\n        this.events.once(Phaser.Scenes.Events.TRANSITION_OUT, () => console.log(Phaser.Scenes.Events.TRANSITION_OUT))\n        this.events.once(Phaser.Scenes.Events.TRANSITION_INIT, () => console.log(Phaser.Scenes.Events.TRANSITION_INIT))\n        this.events.once(Phaser.Scenes.Events.TRANSITION_COMPLETE, () => console.log(Phaser.Scenes.Events.TRANSITION_COMPLETE))\n        this.events.once(Phaser.Scenes.Events.START, () => console.log(Phaser.Scenes.Events.START))\n        this.events.once(Phaser.Scenes.Events.SLEEP, () => console.log(Phaser.Scenes.Events.SLEEP))\n        this.events.once(Phaser.Scenes.Events.SHUTDOWN, () => console.log(Phaser.Scenes.Events.SHUTDOWN))\n        this.events.once(Phaser.Scenes.Events.RESUME, () => console.log(Phaser.Scenes.Events.RESUME))\n        this.events.once(Phaser.Scenes.Events.RENDER, () => console.log(Phaser.Scenes.Events.RENDER))\n        this.events.once(Phaser.Scenes.Events.READY, () => console.log(Phaser.Scenes.Events.READY))\n        this.events.once(Phaser.Scenes.Events.PRE_RENDER, () => console.log(Phaser.Scenes.Events.PRE_RENDER))\n        this.events.once(Phaser.Scenes.Events.PAUSE, () => console.log(Phaser.Scenes.Events.PAUSE))\n        this.events.once(Phaser.Scenes.Events.CREATE, () => console.log(Phaser.Scenes.Events.CREATE))\n        this.events.once(Phaser.Scenes.Events.BOOT, () => console.log(Phaser.Scenes.Events.BOOT))\n\n        let currentOption = 0\n\n        const arrow = this.add.graphics({ fillStyle: { color: 0xffffff, alpha: 1 } })\n        arrow.fillTriangle(0, 0, 5, 5, 0, 10).setPosition(70, 2)\n        \n        const menuOptions = [{\n          label: 'New Game',\n          disabled: false,\n          onSelect: () => this.navigateToScene('IntroScene')\n        }, {\n          label: 'Level 1',\n          disabled: false,\n          onSelect: () => this.navigateToScene('GameScene', { level: 1 })\n        }, {\n          label: 'Level 2',\n          disabled: false,\n          onSelect: () => this.navigateToScene('GameScene', { level: 2 })\n        }]\n\n        menuOptions.forEach((o, idx) => {\n          this.add.text(80, 12 * idx + 1, o.label,\n            {\n              fontFamily: 'GameGirl',\n              fontSize: \"10px\",\n              fill: \"#ffffff\",\n            }\n          ).setAlpha(o.disabled ? 0.5 : 1)\n        })\n\n        this.input.keyboard.on('keydown', event => {\n          let newOption = false\n          if (event.key === 'ArrowUp') {\n            newOption = currentOption > 0 ? currentOption - 1 : menuOptions.length - 1\n          }\n          if (event.key === 'ArrowDown') {\n            newOption = currentOption < menuOptions.length - 1 ? currentOption + 1 : 0\n          }\n          if(newOption !== false) {\n            arrow.setPosition(70, (12 * newOption) + 2)\n            currentOption = newOption\n          }\n          if (event.key === 'Enter') {\n            if(!menuOptions[currentOption].disabled) {\n              menuOptions[currentOption].onSelect()\n            }\n          }\n        })\n      }\n    })\n  }\n}\n","import { useState, createContext, useEffect } from 'react'\n\nexport const context = createContext()\n\nconst PhaserProvider = ({ game, children }) => {\n  const [ready, setReady] = useState()\n  \n  // delay to let the context value to propagate before rendering children.\n  // this way children can implement usePhaser confident that objects returned are not null\n  useEffect(() => {\n    setReady(!!game)\n  }, [game])\n\n  return (\n    <context.Provider value={{ game }}>\n      {\n        ready ? children : null\n      }\n    </context.Provider>\n  )\n}\n\nexport default PhaserProvider\n","import Phaser from 'phaser'\nimport { useEffect, forwardRef, useRef, useState } from 'react'\nimport PhaserProvider from '../PhaserProvider'\n\n/**\n * Creates a new Phaser.Game with given arguments.\n * triggers functions to store game into context\n */\nconst Canvas = forwardRef(({\n  args,\n  children\n}, canvasRef) => {\n  const fallbackRef = useRef()\n  const ref = canvasRef || fallbackRef\n  const [game, setGame] = useState()\n  const [ready, setReady] = useState()\n  args.callbacks = { postBoot: game => {\n    setGame(game)\n    game.scene.scenes[0].events.once(Phaser.Scenes.Events.PRE_RENDER, s => {\n      game.scene.scenes[0].load.on(Phaser.Loader.Events.COMPLETE, () => setReady(true))\n      \n    })\n  }}\n  useEffect(() => {\n\n    const game = new Phaser.Game(args)\n    ref.current = game\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return ready ? <PhaserProvider game={game}>{children}</PhaserProvider> : null\n})\n\nexport default Canvas\n","import Phaser from 'phaser'\n\nexport default class IntroScene extends Phaser.Scene {\n  constructor () {\n    super('IntroScene');\n  }\n\n  preload () {\n    \n  }\n\n  create() {\n    const forest = this.add.graphics({ fillStyle: { color: 0x00ff00, alpha: 1 } })\n    forest.fillRect(0, 0, this.renderer.width * 2, this.renderer.height)\n    const forestText = this.add.text(80, 10, \"forest\",\n      {\n        fontFamily: 'GameGirl',\n        fontSize: \"10px\",\n        fill: \"#ffffff\",\n      }\n    )\n    const container = this.add.container()\n    container.add(forest)\n    container.add(forestText)\n    const ground = this.add.graphics({ fillStyle: { color: 0x654321, alpha: 1 } })\n    ground.fillRect(0, this.renderer.height - this.renderer.height * 0.3, this.renderer.width * 2, this.renderer.height * 0.3)\n    this.add.text(80, this.renderer.height - this.renderer.height * 0.3 + 10, \"ground\",\n      {\n        fontFamily: 'GameGirl',\n        fontSize: \"10px\",\n        fill: \"#ffffff\",\n      }\n    )\n\n    const dark = this.add.graphics({ fillStyle: { color: 0x000000, alpha: 1 } })\n    dark.fillRect(this.renderer.width + 100, this.renderer.height, 200, this.renderer.height * 0.3)\n    dark.name = 'dark'\n\n    const player = this.add.graphics({ fillStyle: { color: 0xb75331, alpha: 1 } })\n    player.fillRect(this.renderer.width, this.renderer.height - this.renderer.height * 0.3 - 50, 50, 50)\n    player.name = 'player'\n\n    const partner = this.add.graphics({ fillStyle: { color: 0xdab263, alpha: 1 } })\n    partner.fillRect(this.renderer.width + 200, this.renderer.height - this.renderer.height * 0.3 - 50, 50, 50)\n    partner.name = 'partner'\n    \n    this.cameras.main.fadeIn(1000, 0, 0, 0)\n    this.cameras.main.once('camerafadeincomplete', this.animateIntro.bind(this))\n  }\n\n  animateIntro() {\n\n    this.cameras.main.pan(this.renderer.width, this.renderer.height/2, 2000, 'Sine.easeInOut');\n    this.cameras.main.once(Phaser.Cameras.Scene2D.Events.PAN_COMPLETE, () => {\n      this.cameras.main.shake(2000, 0.02)\n      this.tweens.add({\n        targets: this.children.getByName('dark'),\n        y: -this.renderer.height * 0.3,\n        duration: 2000\n      })\n      this.tweens.add({\n        targets: this.children.getByName('partner'),\n        y: this.renderer.height,\n        delay: 2000,\n        duration: 2000,\n        ease: 'Sine.in'\n      })\n      this.tweens.add({\n        targets: this.children.getByName('player'),\n        y: this.renderer.height,\n        x: {\n          value: this.children.getByName('player').x + 150,\n          duration: 1000,\n          ease: 'Cubic.easeOut',\n        },\n        delay: 4000,\n        duration: 2000,\n        ease: 'Back.easeInOut',\n        onComplete: () => {\n          this.cameras.main.fade(1000, 0, 0, 0)\n          this.cameras.main.once('camerafadeoutcomplete', () => void this.scene.start('GameScene', { level: 1}))\n        }\n      })\n\n    })\n  }\n}\n","export const TICK_TIME = 250\nexport const PLAYER_TICK_TIME = TICK_TIME - 25\nexport const TILE_SIZE = 20\nexport const TILES_BY_SCREEN = 20\n\nexport const PIXEL_NAME = {\n  EMPTY: '000000',\n  PLAYER: 'ff00ff',\n  GROUND: '663300',\n  BOULDER: '999999',\n  WALL: '0000ff',\n  ENEMY: 'ff0000',\n  JEWEL: 'ffff00',\n  BARREL: '00ffff',\n  EXPLOSION: 'ffffff',\n  INTERACTION: '00ff00'\n}\n\nexport const DIRS = {\n  DOWN: 'ArrowDown',\n  UP: 'ArrowUp',\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n}\n\nexport const PIXEL_TO_TILEMAP_POSITION = {\n  [PIXEL_NAME.EMPTY]: 0,\n  [PIXEL_NAME.WALL]: 1,\n  [PIXEL_NAME.GROUND]: 2,\n  calculateWallTileWithNeighbours: (x, y, data) => {\n    const W = (data[x]||[])[y-1] === PIXEL_NAME.WALL ? 'W' : '-'\n    const N = (data[x-1]||[])[y] === PIXEL_NAME.WALL ? 'N' : '-'\n    const E = (data[x]||[])[y+1] === PIXEL_NAME.WALL ? 'E' : '-'\n    const S = (data[x+1]||[])[y] === PIXEL_NAME.WALL ? 'S' : '-'\n    switch(`${N}${E}${S}${W}`) {\n      case '----':\n        default:\n        return 11\n      case 'NESW':\n        return 12\n      case 'N---':\n        return 13\n      case '-E--':\n        return 14\n      case '--S-':\n        return 15\n      case '---W':\n        return 16\n      case 'NE--':\n        return 17\n      case '-ES-':\n        return 18\n      case '--SW':\n        return 19\n      case 'N--W':\n        return 20\n      case 'NES-':\n        return 22\n      case '-ESW':\n        return 23\n      case 'N-SW':\n        return 24\n      case 'NE-W':\n        return 25\n      case 'N-S-':\n        return 27\n      case '-E-W':\n        return 26\n    }\n  }\n}","export default class GameObject {\n  constructor({ id, isRigid, isBreakable, isFlat, isPickable, isCrushable, level }) {\n    this.id = id\n    // can't be moved nor affected by gravity\n    // wall, ground\n    this.isRigid = isRigid\n\n    // destroyable under circumstances like explosions\n    // ground, boulder, diamond\n    this.isBreakable = isBreakable\n\n    // rounded objects (like boulders and diamonds) above remain still\n    // character, ground, wall\n    this.isFlat = isFlat\n\n    // can be collected by characters\n    // diamond\n    this.isPickable = isPickable\n\n    // crush under pression\n    // character, enemies, dynamite, barrel\n    this.isCrushable = isCrushable\n\n    // energy to break things\n    this.power = 0\n\n    // how resistant to brake it is\n    this.strength = 0\n\n    // how hard can push\n    this.force = 0\n\n    // how much force can resist before move\n    this.weight = 0\n\n    this.level = level\n\n    this.position = null\n    this.alien = null\n    this.isMoveable = !this.isRigid\n  }\n\n  setPosition(coords) {\n    this.position = coords\n  }\n\n  canMove() {\n    return this.isMoveable\n  }\n  overrunBy(){}\n  runningOver(){}\n  canFallDown() { return false }\n  canFallLeft() { return false }\n  canFallRight() { return false }\n  \n}\n\nGameObject.className = 'GameObject'\n","import GameObject from './GameObject'\n\nexport default class Destroyable extends GameObject {\n  constructor(props) {\n    super(props)\n    this.inactive = false\n  }\n  overrunBy(el) {\n    if(el.power > this.strength) {\n      this.level.onDestroy(this)\n      this.inactive = true\n    }\n  }\n}\n\nDestroyable.className = 'Destroyable'\n","import Destroyable from './Destroyable'\n\nexport default class Moveable extends Destroyable {\n  move({ x, y }) {\n    super.setPosition({ x, y})\n    // this.isMoving = false\n  }\n}\n\nMoveable.className = 'Moveable'\n","import Moveable from './Moveable'\n\nexport default class Fallable extends Moveable {\n  constructor(props) {\n    super(props)\n    this.isFalling = 0 // increment on each loop that the element is falling\n  }\n\n  canFallDown() {\n    const nextPos = { x: this.position.x, y: this.position.y + 1 }\n    const destinationInBounds = this.level.isDestinationInBounds(nextPos.x, nextPos.y)\n    const destinationElement = destinationInBounds && this.level.getObjectAt(nextPos.x, nextPos.y)\n    const destinationIsEmpty = this.level.isDestinationEmpty(nextPos.x, nextPos.y)\n    const destinationIsCrushable = destinationElement.isCrushable && this.isFalling\n    const canFall = destinationIsEmpty || destinationIsCrushable\n\n    return canFall\n  }\n  canRollTo(x, y) {\n    const nextPos = { x, y }\n    const destinationInBounds = this.level.isDestinationInBounds(nextPos.x, nextPos.y)\n    const pathElement = destinationInBounds && this.level.getObjectAt(nextPos.x, this.position.y)\n    const pathClear = destinationInBounds && this.level.objectIsEmpty(pathElement)\n    const destinationElement = destinationInBounds && this.level.getObjectAt(nextPos.x, nextPos.y)\n    const destinationIsEmpty = this.level.objectIsEmpty(destinationElement)\n    const restingElement = destinationInBounds && this.level.getObjectAt(this.position.x, this.position.y + 1)\n    const canRest = !this.level.isDestinationEmpty(this.position.x, this.position.y + 1) && restingElement.isFlat\n    const canRoll = destinationInBounds && destinationIsEmpty && pathClear && !canRest && restingElement && !restingElement.isFalling\n    \n    return canRoll\n  }\n  canFallRight() {\n    return !this.canFallDown() && this.canRollTo(this.position.x + 1, this.position.y + 1)\n  }\n  canFallLeft() {\n    return !this.canFallDown() && this.canRollTo(this.position.x - 1, this.position.y + 1)\n  }\n}\n\nFallable.className = 'Fallable'\n","import Fallable from './Fallable'\n\nexport default class Boulder extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: false,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n    this.strength = 5\n  }\n}\nBoulder.className = 'Boulder'\n","import Moveable from './Moveable'\nimport { DIRS } from '../../utils/constants'\n\nexport default class Character extends Moveable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n    this.pushingDirection = null\n  }\n  \n  canMove(x, y) {\n    const neighbour = this.level.getObjectAt(x, y)\n    const emptyPlace = this.level.objectIsEmpty(neighbour)\n    const canBrakeNeighbour = neighbour?.isBreakable && this.power >= neighbour.strength\n    return emptyPlace || canBrakeNeighbour || neighbour.isPickable ? neighbour : false\n  }\n\n  canMoveUp() {\n    return this.canMove(this.position.x, this.position.y - 1)\n  }\n  canMoveDown() {\n    return this.canMove(this.position.x, this.position.y + 1)\n  }\n  canMoveLeft() {\n    const neighbour = this.level.getObjectAt(this.position.x - 1, this.position.y)\n    const nothingBesides = this.level.isPositionClear(this.position.x - 2, this.position.y)\n    const isAboutToFall = this.level.isPositionClear(this.position.x - 1, this.position.y + 1)\n    const canPush = neighbour?.isMoveable && nothingBesides && !isAboutToFall\n\n    let canMove = this.canMove(this.position.x - 1, this.position.y)\n    if(!canMove && canPush) {\n      if(this.pushingDirection === DIRS.LEFT) {\n        canMove = true\n        this.level.moveObject(neighbour, { x: this.position.x - 2, y: this.position.y })\n        // clears pushing dir to let a new loop to push again\n        this.pushingDirection = ''\n      } else {\n        this.pushingDirection = DIRS.LEFT\n      }\n    }\n    return canMove\n  }\n  canMoveRight() {\n    const neighbour = this.level.getObjectAt(this.position.x + 1, this.position.y)\n    const nothingBesides = this.level.isPositionClear(this.position.x + 2, this.position.y)\n    const isAboutToFall = this.level.isPositionClear(this.position.x + 1, this.position.y + 1)\n    const canPush = neighbour?.isMoveable && nothingBesides && !isAboutToFall\n\n    let canMove = this.canMove(this.position.x + 1, this.position.y)\n    if(!canMove && canPush) {\n      if(this.pushingDirection === DIRS.RIGHT) {\n        canMove = true\n        this.level.moveObject(neighbour, { x: this.position.x + 2, y: this.position.y })\n        // clears pushing dir to let a new loop to push again\n        this.pushingDirection = ''\n      } else {\n        this.pushingDirection = DIRS.RIGHT\n      }\n    }\n    return canMove\n  }\n}\n\nCharacter.className = 'Character'\n","import Character from './Character'\nimport Player from './Player'\nimport { DIRS } from '../../utils/constants'\n\nexport default class Enemy extends  Character {\n  constructor(id, level) {\n    super(id, level)\n    this.moveIntentDir = DIRS.UP\n    this.anchorPosition = null\n  }\n  overrunBy(el) {\n    if(el.constructor.className !== Player.className) {\n      // this.alien.visible = false\n      // this.alien.alpha = 0.5\n      this.alien?.destroy()\n      this.level.onCharacterDie(this)\n    }\n  }\n}\n\nEnemy.className = 'Enemy'\n","import Character from './Character'\nimport Enemy from './Enemy'\nimport { DIRS } from '../../utils/constants'\nimport Boulder from './Boulder'\n\nexport default class Player extends Character {\n  constructor(id, level) {\n    super(id, level)\n    this.power = 0.5\n    this.moveIntentDir = ''\n\n    const scene = level.scene\n    scene.input.keyboard.removeListener('keydown', this.onKeyDown.bind(this))\n    scene.input.keyboard.addListener('keydown', this.onKeyDown.bind(this))\n\n    scene.input.keyboard.removeListener('keyup', this.onKeyUp.bind(this))\n    scene.input.keyboard.addListener('keyup', this.onKeyUp.bind(this))\n  }\n  onKeyUp(event) {\n    if (this.moveIntentDir === event.key) {\n      this.moveIntentDir = ''\n      this.pushingDirection = null\n    }\n  }\n  onKeyDown(event) {\n    if(!event.repeat && [DIRS.UP, DIRS.DOWN, DIRS.LEFT, DIRS.RIGHT].includes(event.key)) {\n      this.moveIntentDir = event.key;\n      // calls loop to avoid delay between key press and visual movement at the begining of next loop\n      if(!this.isMoving) {\n        this.level.playerLoop()\n      }\n    }\n  }\n  destroy() {\n    const scene = this.level.scene\n    // animate die\n    scene.input.keyboard.off('keydown')\n    scene.input.keyboard.off('keyup')\n  }\n\n  die() {\n    this.inactive = true\n    this.alien.alpha = 0.5\n    this.destroy()\n  }\n\n  overrunBy(el) {\n    if (el.constructor.className === Boulder.className) {\n      this.level.scene.events.emit('sounds:death_by_rock_hit')\n    }\n    this.die()\n  }\n  runningOver(el) {\n    if(el.constructor.className === Enemy.className) {\n      this.die()\n    }\n  }\n}\n\nPlayer.className = 'Player'\n","import GameObject from './GameObject'\n\nexport default class Wall extends GameObject {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: true,\n      isBreakable: false,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n  }\n}\n\nWall.className = 'Wall'\n","import { PIXEL_TO_TILEMAP_POSITION, PIXEL_NAME } from '../../utils/constants'\nimport Destroyable from './Destroyable'\n\nexport default class Ground extends Destroyable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: true,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n    this.strength = 1\n  }\n\n  overrunBy(el) {\n    super.overrunBy(el)\n    // assume is player who overruns ground\n    const layer = this.level.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    map.putTileAt(PIXEL_TO_TILEMAP_POSITION[PIXEL_NAME.EMPTY], this.position.x, this.position.y)\n  }\n}\n\nGround.className = 'Ground'\n","export default class Empty {\n  constructor(id, level) {\n    this.id = id\n    this.level = level\n    this.isEmpty = true\n  }\n  setPosition(coords) {\n    this.position = coords\n  }\n}\n\nEmpty.className = 'Empty'\n","import Empty from './Empty'\nimport Player from './Player'\n\nexport default class Interactive extends Empty {\n  overrunBy(el) {\n    console.log('Interactive overrunBy el', el)\n    if (el.constructor.className === Player.className) {\n      this.level.onInteractWith(this)\n    }\n  }\n}\n\nInteractive.className = 'Interactive'\n","import Fallable from './Fallable'\n\nexport default class Barrel extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n  }\n  explode() {\n    // this.alien.alpha = 0.5\n    this.alien.destroy()\n    this.level.onExplode(this)\n  }\n  overrunBy(el) {\n    this.explode()\n  }\n}\nBarrel.className = 'Barrel'\n\n","import GameObject from './GameObject'\nimport Empty from './Empty'\nimport { PIXEL_NAME, TICK_TIME } from '../../utils/constants'\n\nexport default class Explosion extends GameObject {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n    this.power = 10\n  }\n  setPosition(x, y) {\n    this.position = { x, y }\n    \n    const layer = this.level.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    const explosion = this.level.scene.add.graphics({ fillStyle: { color: 0xff0000, alpha: 1 } })\n    explosion.fillRect(0, 0, map.tileWidth, map.tileHeight)\n    explosion.setScale(layer.scaleX)\n\n    explosion.x = map.tileToWorldX(x)\n    explosion.y = map.tileToWorldY(y)\n\n    this.level.scene.tweens.add({\n      targets: explosion,\n      alpha: 0,\n      duration: TICK_TIME,\n      onComplete: () => {\n        explosion.destroy()\n        this.level.objects[y][x] = new Empty(PIXEL_NAME.EMPTY, this.level)\n      }\n    });\n    \n    this.alien = explosion\n    \n  }\n}\n\nExplosion.className = 'Explosion'\n","import Fallable from './Fallable'\nimport Player from './Player'\n\nexport default class Jewel extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: false,\n      isPickable: true,\n      isCrushable: false,\n      level\n    })\n    this.strength = 4\n  }\n  overrunBy(el) {\n    if(el.constructor.className === Player.className) {\n      this.alien.visible = false\n      // this.alien.alpha = 0.5\n      this.level.onJewelPick(this)\n    } else {\n      super.overrunBy(el)\n    }\n  }\n}\n\nJewel.className = 'Jewel'\n","import Phaser from 'phaser'\nimport { TICK_TIME } from '../utils/constants'\n\nlet music\nexport default class Rules {\n  constructor(scene) {\n    this.scene = scene\n    console.log('NEW RULES')\n    // gravity loop\n    this.timer = 0\n    this.worldTickFreq = TICK_TIME\n    scene.events.removeListener(this.onSceneUpdate)\n    scene.events.addListener(Phaser.Scenes.Events.UPDATE, this.onSceneUpdate.bind(this))\n\n    this.setUpPuseResumeGame()\n    this.setUpCameraFollowPlayer()\n    // scene.events.off('levelcompleted')\n    scene.events.once('levelcompleted', () => {\n      scene.events.emit('sounds:level_complete')\n      scene.tweens.add({\n        targets: music,\n        volume: 1,\n        ease: 'Linear',\n        duration: 500,\n        onComplete: () => {\n          music.stop()\n        },\n      });\n      scene.cameras.main.fade(3000, 0, 0)\n      scene.cameras.main.once('camerafadeoutcomplete', () => {\n        scene.levels.next()\n        scene.cameras.main.fadeIn(1000, 0, 0)\n      })\n    })\n    scene.events.off('levelstart')\n    scene.events.on('levelstart', () => {\n      console.log('READY TO PLAY')\n      music = scene.sound.add('levels_surface')\n      music.play()\n      music.volume = 0\n      scene.tweens.add({  \n        targets: music,\n        volume: 1,\n        ease: 'Linear',\n        duration: 500,\n        // onComplete: () => {\n        //   titlesMusic.pause()\n        //   scene.start(sceneId, props)\n        // },\n      });\n    })\n  }\n\n  setUpCameraFollowPlayer() {\n    this.scene.events.addListener(Phaser.Scenes.Events.UPDATE, () => {\n      const cam = this.scene.cameras.main\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      const {x, y} = this.scene.levels.current.getPlayerPos()\n      if (cam && map) {\n        var smoothFactor = 0.9;\n  \n        cam.scrollX = smoothFactor * cam.scrollX + (1 - smoothFactor) * (map.tileToWorldX(x) - cam.width * 0.5);\n        cam.scrollY = smoothFactor * cam.scrollY + (1 - smoothFactor) * (map.tileToWorldY(y) - cam.height * 0.5);\n      }\n    })\n  }\n\n  setUpPuseResumeGame() {\n    this.scene.input.keyboard.removeListener('keydown', this.onKeyDown.bind(this))\n    this.scene.input.keyboard.addListener('keydown', this.onKeyDown.bind(this))\n  }\n  onKeyDown(event) {\n    const pauseGame = () => {\n      this.scene.levels.current.pause()\n      this.scene.events.emit('game_paused')\n    }\n    const resumeGame = () => {\n      this.scene.levels.current.resume()\n      this.scene.events.emit('game_resumed')\n    }\n    if(event.key === 'Escape') {\n      const action = this.scene.levels.current.isPaused ? resumeGame : pauseGame\n      action()\n    }\n  }\n\n  onSceneUpdate(time, delta) {\n    this.timer += delta\n    if (this.timer >= this.worldTickFreq) {\n      while (this.timer > this.worldTickFreq) {\n          this.timer -= this.worldTickFreq\n      }\n      this.scene.levels.current.gravityLoop()\n    }\n  }\n}\n","import Phaser from 'phaser'\nimport { TICK_TIME, PLAYER_TICK_TIME, PIXEL_NAME, DIRS, PIXEL_TO_TILEMAP_POSITION } from \"../../utils/constants\"\nimport {\n  Player,\n  Boulder,\n  Wall,\n  Empty,\n  Ground,\n  Barrel,\n  Enemy,\n  Interactive,\n  Jewel,\n  Explosion,\n} from '../objects'\n\nclass Level {\n  constructor(config) {\n    this.config = config\n    this.moveables = []\n    this.objects = []\n    this.scene = null\n    this.player = null\n    this.playerTimeoutId = 0\n    this.isPaused = false\n  }\n\n  connectToScene(phaserScene) {\n    this.scene = phaserScene\n    const layer = this.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    \n\n    this.objects = this.config.map((r, y) => r.map((c, x) => {\n      // factory\n      let element\n      switch(c) {\n        case PIXEL_NAME.WALL:\n          element = new Wall(c, this)\n          element.setPosition({ x, y })\n          break;\n        case PIXEL_NAME.GROUND:\n          element = new Ground(c, this)\n          element.setPosition({ x, y })\n          break;\n        case PIXEL_NAME.BOULDER:\n          const boulder = this.scene.add.sprite(48, 16).setOrigin(0, 0.25).play('boulder_idle')\n          boulder.setScale(layer.scaleX)\n          boulder.x = map.tileToWorldX(x)\n          boulder.y = map.tileToWorldY(y)\n          \n          element = new Boulder(c, this)\n          element.alien = boulder\n          break;\n        case PIXEL_NAME.JEWEL:\n          const jewel = this.scene.add.graphics({ fillStyle: { color: 0xffff00, alpha: 1 } })\n          jewel.setScale(layer.scaleX)\n          // jewel.fillRect(0, 0, map.tileWidth * layer.scaleX, map.tileHeight * layer.scaleY)\n          jewel.fillRect(0, 0, map.tileWidth, map.tileHeight)\n\n          jewel.x = map.tileToWorldX(x)\n          jewel.y = map.tileToWorldY(y)\n          \n          element = new Jewel(c, this)\n          element.alien = jewel\n          break;\n        case PIXEL_NAME.BARREL:\n          const barrel = this.scene.add.graphics({ fillStyle: { color: 0x663300, alpha: 1 } })\n          barrel.setScale(layer.scaleX)\n          // barrel.fillRect(0, 0, map.tileWidth * layer.scaleX, map.tileHeight * layer.scaleY)\n          barrel.fillRect(0, 0, map.tileWidth, map.tileHeight)\n\n          barrel.x = map.tileToWorldX(x)\n          barrel.y = map.tileToWorldY(y)\n          \n          element = new Barrel(c, this)\n          element.alien = barrel\n          break;\n        case PIXEL_NAME.PLAYER:\n          const player = this.scene.add.sprite(48, 16).setOrigin(0, 0.25).play('brave_idle')\n          player.setScale(layer.scaleX)\n          player.x = map.tileToWorldX(x)\n          player.y = map.tileToWorldY(y)\n\n          player.name = 'brave'\n          player.on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n            if(!player.isMoving) {\n              // player.play('brave_idle')\n            }\n          })\n\n          element = new Player(c, this)\n          element.alien = player\n\n          // add shortcut reference\n          this.player = element\n          break;\n        case PIXEL_NAME.ENEMY:\n          const enemy = this.scene.add.graphics({ fillStyle: { color: 0xff0000, alpha: 1 } })\n          enemy.fillRect(0, 0, map.tileWidth, map.tileHeight)\n          enemy.setScale(layer.scaleX)\n          this.scene.addToScalables(enemy, { x, y })\n          enemy.x = map.tileToWorldX(x)\n          enemy.y = map.tileToWorldY(y)\n          element = new Enemy(c, this)\n          element.alien = enemy\n          break;\n        case PIXEL_NAME.INTERACTION:\n          element = new Interactive(c, this)\n          break;\n        default:\n          element = new Empty(c, this);\n\n      }\n      element.setPosition({ x, y })\n      if (!this.objectIsEmpty(element) && !element.isRigid) {\n        // enters backward to start evaluating lower elements into gravityLoop\n        // this.moveables.unshift(element)\n        this.moveables.push(element)\n      }\n      this.onAddElement(element)\n      return element\n    }))\n  }\n\n  gravityLoop() {\n    if (this.isPaused) { return }\n    this.moveables.sort((a, b) => a.position.y - b.position.y).forEach(el => {\n      const canFallDown = el.canFallDown()\n      const canFallLeft = el.canFallLeft()\n      const canFallRight = el.canFallRight()\n      let nextPos\n      if(canFallDown) {\n        nextPos = { x: el.position.x, y: el.position.y + 1 }\n      }\n      if (!canFallDown && canFallLeft) {\n        nextPos = { x: el.position.x - 1, y: el.position.y}\n        if(el.isFalling) {\n          nextPos.y ++\n        }\n      }\n      if (!canFallDown && !canFallLeft && canFallRight) {\n        nextPos = { x: el.position.x + 1, y: el.position.y}\n        if(el.isFalling) {\n          nextPos.y ++\n        }\n      }\n\n      if (nextPos) {\n        this.moveObject(el, nextPos)\n        if (el.isFalling && (canFallLeft || canFallRight) && el.constructor.className === Boulder.className && this.player.pushingDirection !== '') {\n          this.scene.events.emit('sounds:rock_hit')\n        }\n        el.isFalling++\n      } else {\n        if (el.isFalling && el.constructor.className === Boulder.className) {\n          this.scene.events.emit('sounds:rock_hit')\n        }\n        if(el.isFalling && el.constructor.className === Barrel.className) {\n          el.explode()\n        }\n        el.isFalling = 0\n      }\n    })\n\n    this.enemiesLoop()\n  }\n  enemiesLoop() {\n\n    if(this.isPaused) { return }\n    let nextPos, neighbour, isDestinationEmpty, isPerpToAnchor, newAnchor, nextDir, backToTrackDir, nextAnchorPos\n    \n    const helperDirCalc = (enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos) => {\n      neighbour = this.getObjectAt(nextPos.x, nextPos.y)\n      isDestinationEmpty = this.objectIsEmpty(neighbour) || neighbour?.constructor.className === Player.className // this.isDestinationEmpty(nextPos.x, nextPos.y)\n      if (!isDestinationEmpty && !enemy.anchorPosition) {\n        enemy.anchorPosition = neighbour.position\n        // counter clockwise\n        enemy.moveIntentDir = nextDir\n      }\n      if (isDestinationEmpty && neighbour.constructor.className === Player.className) {\n        this.moveObject(enemy, nextPos)\n      }\n      if (isDestinationEmpty) {\n        if (!enemy.anchorPosition) {\n          enemy.moveIntentDir = nextDir\n          return\n        }\n        isPerpToAnchor = enemy.position.x === enemy.anchorPosition.x || enemy.position.y === enemy.anchorPosition.y\n        // scenario 1: enemy is perpendicular to anchor\n        if (isPerpToAnchor) {\n          // updates anchor counter clockwise\n          newAnchor = this.getObjectAt(nextAnchorPos.x, nextAnchorPos.y)\n          if (!this.objectIsEmpty(newAnchor) && newAnchor?.constructor.className !== Player.className) {\n            enemy.anchorPosition = newAnchor.position\n          } else {\n            enemy.moveIntentDir = backToTrackDir\n          }\n        }\n        this.moveObject(enemy, nextPos)\n      } else {\n        enemy.anchorPosition = neighbour.position\n        enemy.moveIntentDir = nextDir\n      }\n    }\n    this.moveables\n    .filter(el => el.constructor.className === Enemy.className)\n    .forEach(enemy => {\n      // potential path finding mechanism @see https://github.com/qiao/PathFinding.js\n      // if(!enemy.path) {\n      //   const grid = new window.PF.Grid(this.objects.map(row => row.map(el => el.isEmpty ? 0 : 1)));\n      //   enemy.pathfinder = new window.PF.AStarFinder();\n      //   const path = enemy.pathfinder.findPath(enemy.position.x, enemy.position.y, thi.player.position.x, this.player.position.y, grid);\n      // }\n      switch(enemy.moveIntentDir) {\n        case DIRS.UP:\n          nextPos = { x: enemy.position.x, y: enemy.position.y - 1}\n          nextDir = DIRS.LEFT\n          backToTrackDir = DIRS.RIGHT\n          nextAnchorPos = { x: nextPos.x + 1, y: nextPos.y }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break;\n        case DIRS.RIGHT:\n          nextPos = { x: enemy.position.x + 1, y: enemy.position.y}\n          nextDir = DIRS.UP\n          backToTrackDir = DIRS.DOWN\n          nextAnchorPos = { x: nextPos.x, y: nextPos.y + 1 }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break;\n        case DIRS.DOWN:\n          nextPos = { x: enemy.position.x, y: enemy.position.y + 1}\n          nextDir = DIRS.RIGHT\n          backToTrackDir = DIRS.LEFT\n          nextAnchorPos = { x: nextPos.x - 1, y: nextPos.y }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break;\n        case DIRS.LEFT:\n          nextPos = { x: enemy.position.x - 1, y: enemy.position.y}\n          nextDir = DIRS.DOWN\n          backToTrackDir = DIRS.UP\n          nextAnchorPos = { x: nextPos.x, y: nextPos.y - 1 }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break;\n\n        default:\n          break;\n      }\n    })\n  }\n  playerLoop() {\n    if(this.isPaused || this.player.inactive) { return }\n    clearTimeout(this.playerTimeoutId)\n    const player = this.player\n    \n    const nextPos = { x: player.position.x, y: player.position.y }\n    switch(player.moveIntentDir) {\n      case DIRS.UP:\n        if(player.canMoveUp()) nextPos.y -= 1\n        break;\n      case DIRS.DOWN:\n        if(player.canMoveDown()) nextPos.y += 1\n        break;\n      case DIRS.LEFT:\n        if(player.canMoveLeft()) nextPos.x -= 1\n        break;\n      case DIRS.RIGHT:\n        if(player.canMoveRight()) nextPos.x += 1\n        break;\n      default:break;\n    }\n    if ((player.position.x !== nextPos.x || player.position.y !== nextPos.y) && !player.isMoving) {\n      player.isMoving = true\n      if (player.position.x < nextPos.x) {\n        player.alien.setOrigin(0, 0.25)\n        player.alien.setFlipX(false)\n      }\n      if (player.position.x > nextPos.x) {\n        player.alien.setFlipX(true)\n        player.alien.setOrigin(0.25, 0.25)\n      }\n      player.alien.emit('player_moves', nextPos)\n      this.moveObject(player, nextPos)\n    }\n\n    this.playerTimeoutId = setTimeout(() => {\n      player.isMoving = false\n      player.alien.play('brave_idle')\n      if(player.moveIntentDir !== '') {\n        this.playerLoop()\n      }\n    }, PLAYER_TICK_TIME);\n  }\n  // afterPlayerLoop(cb) {\n  //   this.afterPlayerLoopCallbacks.push(cb)\n  // }\n  moveObject(el, pos) {\n    const layer = this.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    const origin = { x: el.position.x, y: el.position.y }\n    // assume destination is occupeable\n    const destinationElement = this.getObjectAt(pos.x, pos.y)\n    if (!this.objectIsEmpty(destinationElement) || destinationElement.constructor.className === Interactive.className) {\n      destinationElement.overrunBy(el)\n      el.runningOver(destinationElement)\n    }\n\n    if(el.inactive) return\n\n    // clear origin position\n    this.setObjectAt(origin.x, origin.y, new Empty(PIXEL_NAME.EMPTY, this))\n    // fill destination position\n    this.setObjectAt(pos.x, pos.y, el)\n    \n    // updates element position\n    el.move(pos)\n    if(el.constructor.className === Player.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: PLAYER_TICK_TIME,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          duration: PLAYER_TICK_TIME,\n        },\n      });\n      el.alien.play('brave_run')\n    }\n    if(el.constructor.className === Enemy.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          duration: TICK_TIME,\n        },\n      });\n    }\n    if(el.constructor.className === Jewel.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n    }\n    if(el.constructor.className === Barrel.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n    }\n    if(el.constructor.className === Boulder.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n      if (pos.x !== origin.x) {\n        el.alien.play(pos.x > origin.x ? 'boulder_roll_right' : 'boulder_roll_left')\n      }\n    }\n  }\n  pause() {\n    this.isPaused = true\n  }\n  resume() {\n    this.isPaused = false\n  }\n  onCharacterDie(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n    if (el.constructor.className === Player.className) {\n      // this.player = null\n    }\n  }\n  onJewelPick(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n  }\n  onDestroy(el) {\n    if(el.constructor.className === Boulder.className) {\n      // console.log(el);\n    }\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n  }\n  onExplode(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n    for(let x = el.position.x - 2; x <= el.position.x + 2; x++) {\n      for(let y = el.position.y - 2; y < el.position.y + 2; y++) {\n        const el = this.getObjectAt(x, y)\n        const explosion = new Explosion(PIXEL_NAME.EXPLOSION, this)\n        if(el.isBreakable || this.objectIsEmpty(el)) {\n          explosion.setPosition(x, y)\n          this.objects[y][x] = explosion\n        }\n        if (el && !this.objectIsEmpty(el)){\n          el.overrunBy(explosion)\n        }\n      }\n    }\n  }\n  onComplete() {\n    this.objects.forEach(row => row.forEach(el => {\n      if(el !== this.player && el.alien) {\n        el.alien.destroy()\n      }\n    }))\n    this.pause()\n    this.scene.events.emit('levelcompleted', this)\n    // this.moveables = []\n    // this.objects.map(el => el.alien?.destroy())\n  }\n  onInteractWith(el) {\n    console.warn(`implement interaction for ${this.id}`)\n  }\n  onAddElement(el) {\n    console.warn(`implement element added ${this.id}`)\n  }\n  getPlayerPos() { return this.player.position}\n  getConfigAt(x, y) {\n    return this.isDestinationInBounds(x, y) && this.config[y][x]\n  }\n  getCoords(id) {\n    const found = []\n    for(let i = 0; i < this.config.length; i++) {\n      for(let j = 0; j < this.config[i].length; j++) {\n        if (this.config[i][j] === id) {\n          found.push({x: j, y: i})\n        }\n      }\n    }\n    return found\n  }\n  getObjectAt(x, y) {\n    return this.isDestinationInBounds(x, y) && this.objects[y][x]\n  }\n  setObjectAt(x, y, obj) {\n    this.objects[y][x] = obj\n  }\n  isPositionClear(x, y) {\n    return this.getObjectAt(x, y).isEmpty\n  }\n  isDestinationInBounds(x, y) {\n    const xInBounds = x < this.config[0].length && x >= 0\n    const yInBounds = y < this.config.length && y >= 0\n    return xInBounds && yInBounds\n  }\n  objectIsEmpty(el) {\n    return el.isEmpty\n  }\n  isDestinationEmpty(x, y) {\n    return this.getObjectAt(x, y).isEmpty\n  }\n}\n\nexport default Level\n","import Phaser from 'phaser'\nimport { PIXEL_NAME, PIXEL_TO_TILEMAP_POSITION } from '../utils/constants'\nimport Level1 from './levels/level_1'\nimport Level2 from './levels/level_2'\n\nconst LEVELS = [Level1, Level2]\n\nexport default class LevelManager {\n  constructor(scene, currentLevel = 0) {\n    this.scene = scene\n    this.currentIndex = currentLevel - 1\n    this.current = LEVELS[this.currentIndex]\n    this.start()\n  }\n  \n  start() {\n    this.current = LEVELS[this.currentIndex]\n    this.current.config = this.generateConfig()\n    this.map = this.createMap()\n    this.current.connectToScene(this.scene)\n    this.current.pause()\n    this.scene.cameras.main.once('camerafadeincomplete', () => {\n      this.current.resume()\n      this.scene.events.emit('levelstart')\n      \n    })\n  }\n\n  next() {\n    // destroy and unload\n    this.currentIndex += 1\n    if (LEVELS[this.currentIndex]) {\n      this.start()\n    } else {\n      this.scene.scene.start('MenuScene')\n    }\n\n  }\n\n  generateConfig() {\n    const scene = this.scene\n    const levelId = this.current.id\n    var texture = scene.textures.get(levelId);\n    var image = texture.getSourceImage();\n    const levelConfig = Array(image.height).fill('000000').map(r => Array(image.width).fill('000000'))\n    for(let j = 0; j < image.width; j++) {\n      for(let i = 0; i < image.height; i++) {\n        const pixColor = scene.textures.getPixel(j, i, levelId)\n        const key = `${Phaser.Display.Color.ComponentToHex(pixColor.r)}${Phaser.Display.Color.ComponentToHex(pixColor.g)}${Phaser.Display.Color.ComponentToHex(pixColor.b)}`\n        levelConfig[i][j] = key\n      }\n    }\n    return levelConfig\n  }\n\n  createMap() {\n    const scene = this.scene\n    const levelData = this.current\n    const SCALE = scene.data.get('custom_scale')\n    const camera = this.scene.cameras.main\n\n    let map = this.map\n    if(map && map.scene) {\n      map.destroy()\n    }\n\n    // Creating a blank tilemap with dimensions matching the dungeon\n    map = scene.make.tilemap({ tileWidth: 20, tileHeight: 20, width: levelData.config[0].length, height: levelData.config.length });\n\n    // addTilesetImage: function (tilesetName, key, tileWidth, tileHeight, tileMargin, tileSpacing, gid)\n    let tileset = map.addTilesetImage('tiles', 'main-tiles', 20, 20, 1, 2);\n\n    let layer = map.createBlankLayer('layer_1', tileset);\n    layer.name = 'layer_1'\n    layer.depth = 0\n\n    layer.setScale(SCALE)\n\n    // Fill with black tiles\n    layer.fill(1)\n\n    levelData.config.forEach((row, x) => {\n      row.forEach((el, y) => {\n        const tile = levelData.config[x][y]\n        if (![PIXEL_NAME.EMPTY, PIXEL_NAME.PLAYER, PIXEL_NAME.BOULDER, PIXEL_NAME.INTERACTION].includes(tile)) {\n          if (tile === PIXEL_NAME.WALL) {\n            const tile = PIXEL_TO_TILEMAP_POSITION.calculateWallTileWithNeighbours(x, y, levelData.config)\n            map.putTileAt(tile, y, x)\n          } else {\n            map.putTileAt(PIXEL_TO_TILEMAP_POSITION[tile], y, x)\n          }\n        } else {\n          map.putTileAt(PIXEL_TO_TILEMAP_POSITION[PIXEL_NAME.EMPTY], y, x)\n        }\n      })\n    })\n\n    // set up camera\n    camera.setBounds(0, 0, layer.width * layer.scaleX, layer.height * layer.scaleY);\n    camera.zoom = 1\n\n    return map\n  }\n}","import LevelBase from './levelBase'\n\nclass Level1 extends LevelBase {\n  constructor() {\n    super()\n    this.id = 'level_1'\n    this.name = 'The beginning'\n  }\n\n  connectToScene(scene) {\n    super.connectToScene(scene)\n    scene.cameras.main.once('camerafadeincomplete', () => {\n      alert('INTRO MESSAGE, \"Guess I can move those boulders\"')\n    })\n  }\n\n  onInteractWith(el) {\n    if(el.position.x === 18 && el.position.y === 14) {\n      alert('>>> Level 1 completed <<<')\n      this.onComplete()\n    }\n  }\n}\n\nexport default new Level1()\n","import LevelBase from './levelBase'\nimport { Interactive } from '../objects'\n\nclass Level2 extends LevelBase {\n  constructor() {\n    super()\n    this.id = 'level_2'\n    this.name = 'The finding'\n  }\n\n  // connectToScene(scene) {\n  //   super.connectToScene(scene)\n  //   scene.cameras.main.once('camerafadeincomplete', () => {\n  //     alert('INTRO MESSAGE, \"Guess I can move those boulders\"')\n  //   })\n  // }\n\n  onInteractWith(el) {\n    if(el.position.x === 6 && el.position.y === 6) {\n      this.player.moveIntentDir = ''\n      alert('FIRST CLUE, \"Hmm, these walls looks different. Like someone have put them here.\"')\n    }\n    if(el.position.x === 5 && el.position.y === 12) {\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      this.player.moveIntentDir = ''\n      alert('FIRST TOOL, \"Great! Now, with this pickaxe I can break all those clods\"')\n      this.player.power = 1\n      map.putTileAt(19, el.position.x, el.position.y)\n    }\n    if(el.position.x === 19 && el.position.y === 1) {\n      alert('>>> Level 2 completed <<<')\n      this.onComplete()\n    }\n  }\n\n  onAddElement(el) {\n    if(el.constructor.className === Interactive.className && el?.position.x === 5 && el?.position.y === 12) {\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      map.putTileAt(54, el.position.x, el.position.y)\n    }\n  }\n}\n\nexport default new Level2()\n","export default class UI {\n  constructor(scene) {\n    this.scene = scene\n    this.scene.events.off('game_paused')\n    this.scene.events.on('game_paused', () => alert('Game paused, press ESC to resume'))\n    this.scene.events.off('game_resumed')\n    this.scene.events.on('game_resumed', () => alert('Game resumes now'))\n\n    const rockHit = this.scene.sound.add('rock_hit')\n    this.scene.events.off('sounds:rock_hit')\n    this.scene.events.on('sounds:rock_hit', () => rockHit.play())\n\n    const deathByRockHit = this.scene.sound.add('death_by_rock')\n    // this.scene.events.off('sounds:death_by_rock_hit')\n    this.scene.events.once('sounds:death_by_rock_hit', () => deathByRockHit.play())\n\n    const levelComplete = this.scene.sound.add('level_complete')\n    // this.scene.events.off('sounds:level_complete')\n    this.scene.events.once('sounds:level_complete', () => levelComplete.play())\n  }\n}","import Phaser from 'phaser'\nimport { TILES_BY_SCREEN, TILE_SIZE, TICK_TIME } from '../utils/constants';\nimport LevelManager from '../components/LevelManager'\nimport Rules from '../components/Rules'\nimport UI from '../components/UI'\n\nconst SCALE = Math.round((window.innerWidth/TILES_BY_SCREEN * 100 / TILE_SIZE/100)*100)/100\n\nexport default class GameScene extends Phaser.Scene {\n  constructor () {\n    super('GameScene');\n  }\n\n  create(data = {}) {\n    this.data.set('custom_scale', SCALE)\n\n    this.game.scale.scaleMode = Phaser.Scale.RESIZE\n    this.handleScales()\n    this.createAnimations()\n    this.levels = new LevelManager(this, data.level)\n\n    this.cameras.main.fadeIn(1000, 0, 0, 0)\n    new Rules(this)\n    new UI(this)\n  }\n  \n  handleScales() {\n    const SCALE = this.data.get('custom_scale')\n    const scalables = new Map()\n    this.clearScalables = () => void scalables.clear()\n      this.removeFromScalables = el => scalables.delete(el)\n      this.addToScalables = (el, coords) => {\n        el.setScale(SCALE)\n        scalables.set(el, coords)\n      }\n      this.updateScale = scale => {\n        scalables.forEach((coords, el) => el?.setScale(scale))\n      }\n      window.addEventListener('resize', () => {\n        const scale = Math.round((window.innerWidth/TILES_BY_SCREEN * 100 / TILE_SIZE/100)*100)/100\n        const layer = this.scene.children.getByName('layer_1')\n        const { tilemap: map } = layer\n        layer.setScale(scale)\n        // this.children.list.forEach(el => {\n        //   if(el.type === 'TilemapLayer') {\n        //     el.setScale(scale)\n        //   }\n        // })\n        this.data.get('level').objects.forEach((rows, y) => {\n          rows.forEach((obj, x) => {\n            if(obj.alien) {\n              obj.alien.setScale(scale)\n              obj.alien.x = map.tileToWorldX(x)\n              obj.alien.y = map.tileToWorldY(y)\n            }\n          })\n        })\n        const camera = this.cameras.main\n        camera.setBounds(0, 0, layer.width * layer.scaleX, layer.height * layer.scaleY);\n      })\n  }\n\n  createAnimations() {\n    this.anims.create({\n        key: 'boulder_roll_right',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0, 1, 2, 0 ] }),\n        frameRate: 12,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'boulder_roll_left',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0, 2, 1, 0 ] }),\n        frameRate: 12,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'boulder_idle',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0 ] }),\n        frameRate: 1,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'brave_idle',\n        frames: this.anims.generateFrameNumbers('brave', { frames: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 0 ] }),\n        frameRate: 4,\n        repeat: -1\n      })\n      this.anims.create({\n        key: 'brave_run',\n        frames: this.anims.generateFrameNumbers('brave', { frames: [ 3, 4, 5, 3 ] }),\n        frameRate: (1000/TICK_TIME) * 4,\n        repeat: 0\n      })\n  }\n}","import Phaser from 'phaser'\nimport Canvas from './libs/react-phaser-fiber/components/Canvas'\nimport MenuScene from './scenes/MenuScene'\nimport IntroScene from './scenes/IntroScene'\nimport GameScene from './scenes/GameScene'\n\nconst gameConfig = {\n  width: \"100%\",\n  height: \"100%\",\n  type: Phaser.AUTO,\n  backgroundColor: '#000000',\n  disableContextMenu: true,\n  pixelArt: true,\n  roundPixels: false,\n  scene: [MenuScene, IntroScene, GameScene]\n}\nfunction Game() {\n  return (\n    <Canvas args={gameConfig} />\n  );\n}\n\nexport default Game;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport reportWebVitals from './reportWebVitals';\nimport config from '../package.json'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n    <div style={{\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      fontSize: 10,\n      color: 'gray'\n    }}>v{config.version}</div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}