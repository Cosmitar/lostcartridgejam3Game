{"version":3,"sources":["libs/react-phaser-fiber/PhaserProvider.js","libs/react-phaser-fiber/components/Canvas.js","scenes/MenuScene.js","scenes/IntroScene.js","utils/constants.js","components/objects/GameObject.js","components/objects/Destroyable.js","components/objects/Moveable.js","components/objects/Fallable.js","components/objects/Boulder.js","components/objects/Character.js","components/objects/Enemy.js","components/objects/Player.js","components/objects/Wall.js","components/objects/Ground.js","components/objects/Empty.js","components/objects/Interactive.js","components/objects/Barrel.js","components/objects/Explosion.js","components/objects/Jewel.js","components/levels/levelBase.js","components/LevelManager.js","components/levels/level_1.js","components/levels/level_2.js","components/Rules.js","components/UI.js","scenes/GameScene.js","Game.js","reportWebVitals.js","index.js"],"names":["context","createContext","PhaserProvider","game","children","useState","ready","setReady","useEffect","Provider","value","Canvas","forwardRef","canvasRef","args","fallbackRef","useRef","ref","setGame","callbacks","postBoot","scene","scenes","events","once","Phaser","Scenes","Events","PRE_RENDER","s","load","on","Loader","COMPLETE","Game","current","MenuScene","this","script","image","spritesheet","frameWidth","frameHeight","PROGRESS","console","log","window","WebFont","custom","families","active","emit","sys","config","arrow","add","graphics","fillStyle","color","alpha","fillTriangle","setPosition","currentOption","menuOptions","label","disabled","onSelect","start","level","forEach","o","idx","text","fontFamily","fontSize","fill","setAlpha","input","keyboard","event","newOption","key","length","Scene","IntroScene","forest","fillRect","renderer","width","height","forestText","container","dark","name","player","partner","cameras","main","fadeIn","animateIntro","bind","pan","Cameras","Scene2D","PAN_COMPLETE","shake","tweens","targets","getByName","y","duration","delay","ease","x","onComplete","fade","TICK_TIME","PIXEL_NAME","EMPTY","PLAYER","GROUND","BOULDER","WALL","ENEMY","JEWEL","BARREL","EXPLOSION","INTERACTION","DIRS","DOWN","UP","LEFT","RIGHT","PIXEL_TO_TILEMAP_POSITION","data","W","N","E","S","GameObject","id","isRigid","isBreakable","isFlat","isPickable","isCrushable","power","strength","force","weight","position","alien","isMoveable","coords","Destroyable","props","inactive","el","onDestroy","Moveable","Fallable","isFalling","nextPos","destinationElement","isDestinationInBounds","getObjectAt","destinationIsEmpty","isDestinationEmpty","destinationIsCrushable","destinationInBounds","pathElement","pathClear","objectIsEmpty","restingElement","canRest","canRollTo","Boulder","Character","pushingDirection","neighbour","emptyPlace","canBrakeNeighbour","canMove","nothingBesides","isPositionClear","isAboutToFall","canPush","moveObject","Enemy","moveIntentDir","anchorPosition","constructor","Player","destroy","onCharacterDie","repeat","includes","isMoving","playerLoop","off","die","Wall","Ground","tilemap","putTileAt","Empty","isEmpty","Interactive","onInteractWith","Barrel","onExplode","explode","Explosion","layer","map","explosion","tileWidth","tileHeight","setScale","scaleX","tileToWorldX","tileToWorldY","objects","Jewel","visible","onJewelPick","Level","moveables","playerTimeoutId","isPaused","phaserScene","r","c","element","boulder","sprite","setOrigin","play","jewel","barrel","Animations","ANIMATION_COMPLETE","enemy","addToScalables","push","onAddElement","sort","a","b","canFallDown","canFallLeft","canFallRight","enemiesLoop","newAnchor","nextDir","backToTrackDir","nextAnchorPos","helperDirCalc","filter","clearTimeout","canMoveUp","canMoveDown","canMoveLeft","canMoveRight","setFlipX","setTimeout","pos","origin","overrunBy","runningOver","setObjectAt","move","e","row","pause","warn","found","i","j","obj","xInBounds","yInBounds","LEVELS","alert","LevelBase","LevelManager","currentLevel","currentIndex","generateConfig","createMap","connectToScene","levelId","textures","get","getSourceImage","levelConfig","Array","pixColor","getPixel","Display","Color","ComponentToHex","g","levelData","SCALE","camera","tileset","make","addTilesetImage","createBlankLayer","depth","tile","calculateWallTileWithNeighbours","setBounds","scaleY","zoom","Rules","timer","worldTickFreq","addListener","UPDATE","onSceneUpdate","setUpPuseResumeGame","setUpCameraFollowPlayer","levels","next","cam","getPlayerPos","smoothFactor","scrollX","scrollY","pauseGame","resumeGame","resume","time","delta","gravityLoop","UI","Math","round","innerWidth","GameScene","set","scale","scaleMode","Scale","RESIZE","handleScales","createAnimations","scalables","Map","clearScalables","clear","removeFromScalables","delete","updateScale","addEventListener","rows","anims","create","frames","generateFrameNumbers","frameRate","gameConfig","type","AUTO","backgroundColor","disableContextMenu","pixelArt","roundPixels","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b263662f.chunk.js","sourcesContent":["import { useState, createContext, useEffect } from 'react'\n\nexport const context = createContext()\n\nconst PhaserProvider = ({ game, children }) => {\n  const [ready, setReady] = useState()\n  \n  // delay to let the context value to propagate before rendering children.\n  // this way children can implement usePhaser confident that objects returned are not null\n  useEffect(() => {\n    setReady(!!game)\n  }, [game])\n\n  return (\n    <context.Provider value={{ game }}>\n      {\n        ready ? children : null\n      }\n    </context.Provider>\n  )\n}\n\nexport default PhaserProvider\n","import Phaser from 'phaser'\nimport { useEffect, forwardRef, useRef, useState } from 'react'\nimport PhaserProvider from '../PhaserProvider'\n\n/**\n * Creates a new Phaser.Game with given arguments.\n * triggers functions to store game into context\n */\nconst Canvas = forwardRef(({\n  args,\n  children\n}, canvasRef) => {\n  const fallbackRef = useRef()\n  const ref = canvasRef || fallbackRef\n  const [game, setGame] = useState()\n  const [ready, setReady] = useState()\n  args.callbacks = { postBoot: game => {\n    setGame(game)\n    game.scene.scenes[0].events.once(Phaser.Scenes.Events.PRE_RENDER, s => {\n      game.scene.scenes[0].load.on(Phaser.Loader.Events.COMPLETE, () => setReady(true))\n      \n    })\n  }}\n  useEffect(() => {\n\n    const game = new Phaser.Game(args)\n    ref.current = game\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return ready ? <PhaserProvider game={game}>{children}</PhaserProvider> : null\n})\n\nexport default Canvas\n","import Phaser from 'phaser'\n\nexport default class MenuScene extends Phaser.Scene {\n  constructor () {\n    super('MenuScene');\n  }\n\n  preload () {\n    this.load.script('webfont', 'https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js');\n    this.load.image('main-tiles', process.env.PUBLIC_URL + '/assets/tilemaps/tilemap_20x20.png');\n    this.load.image('level_1', process.env.PUBLIC_URL + '/assets/maps/level_1.png');\n    this.load.image('level_2', process.env.PUBLIC_URL + '/assets/maps/level_2.png');\n    this.load.spritesheet('boulder', process.env.PUBLIC_URL + '/assets/sprites/boulder_sprite.png', { frameWidth: 26, frameHeight: 26 });\n    this.load.spritesheet('brave', process.env.PUBLIC_URL + '/assets/sprites/brave_sprite.png', { frameWidth: 26, frameHeight: 26 });\n    this.load.on(Phaser.Loader.Events.PROGRESS, console.log)\n  }\n\n  create() {\n    window.WebFont.load({\n      custom: {\n          families: [ 'GameGirl' ]\n      },\n      active: () => {\n        this.events.emit('scene_ready', this.sys.config)\n        const arrow = this.add.graphics({ fillStyle: { color: 0xffffff, alpha: 1 } })\n        arrow.fillTriangle(0, 0, 5, 5, 0, 10).setPosition(70, 2)\n        let currentOption = 0\n        const menuOptions = [{\n          label: 'New Game',\n          disabled: false,\n          onSelect: () => this.scene.start('IntroScene')\n        }, {\n          label: 'Level 1',\n          disabled: false,\n          onSelect: () => this.scene.start('GameScene', { level: 1 })\n        }, {\n          label: 'Level 2',\n          disabled: false,\n          onSelect: () => this.scene.start('GameScene', { level: 2 })\n        }]\n        menuOptions.forEach((o, idx) => {\n          this.add.text(80, 12 * idx + 1, o.label,\n            {\n              fontFamily: 'GameGirl',\n              fontSize: \"10px\",\n              fill: \"#ffffff\",\n            }\n          ).setAlpha(o.disabled ? 0.5 : 1)\n        })\n\n        this.input.keyboard.on('keydown', event => {\n          let newOption = false\n          if (event.key === 'ArrowUp') {\n            newOption = currentOption > 0 ? currentOption - 1 : menuOptions.length - 1\n          }\n          if (event.key === 'ArrowDown') {\n            newOption = currentOption < menuOptions.length - 1 ? currentOption + 1 : 0\n          }\n          if(newOption !== false) {\n            arrow.setPosition(70, (12 * newOption) + 2)\n            currentOption = newOption\n          }\n          if (event.key === 'Enter') {\n            if(!menuOptions[currentOption].disabled) {\n              menuOptions[currentOption].onSelect()\n            }\n          }\n        })\n      }\n    })\n  }\n}\n","import Phaser from 'phaser'\n\nexport default class IntroScene extends Phaser.Scene {\n  constructor () {\n    super('IntroScene');\n  }\n\n  preload () {\n    \n  }\n\n  create() {\n    const forest = this.add.graphics({ fillStyle: { color: 0x00ff00, alpha: 1 } })\n    forest.fillRect(0, 0, this.renderer.width * 2, this.renderer.height)\n    const forestText = this.add.text(80, 10, \"forest\",\n      {\n        fontFamily: 'GameGirl',\n        fontSize: \"10px\",\n        fill: \"#ffffff\",\n      }\n    )\n    const container = this.add.container()\n    container.add(forest)\n    container.add(forestText)\n    const ground = this.add.graphics({ fillStyle: { color: 0x654321, alpha: 1 } })\n    ground.fillRect(0, this.renderer.height - this.renderer.height * 0.3, this.renderer.width * 2, this.renderer.height * 0.3)\n    this.add.text(80, this.renderer.height - this.renderer.height * 0.3 + 10, \"ground\",\n      {\n        fontFamily: 'GameGirl',\n        fontSize: \"10px\",\n        fill: \"#ffffff\",\n      }\n    )\n\n    const dark = this.add.graphics({ fillStyle: { color: 0x000000, alpha: 1 } })\n    dark.fillRect(this.renderer.width + 100, this.renderer.height, 200, this.renderer.height * 0.3)\n    dark.name = 'dark'\n\n    const player = this.add.graphics({ fillStyle: { color: 0xb75331, alpha: 1 } })\n    player.fillRect(this.renderer.width, this.renderer.height - this.renderer.height * 0.3 - 50, 50, 50)\n    player.name = 'player'\n\n    const partner = this.add.graphics({ fillStyle: { color: 0xdab263, alpha: 1 } })\n    partner.fillRect(this.renderer.width + 200, this.renderer.height - this.renderer.height * 0.3 - 50, 50, 50)\n    partner.name = 'partner'\n    \n    this.cameras.main.fadeIn(1000, 0, 0, 0)\n    this.cameras.main.once('camerafadeincomplete', this.animateIntro.bind(this))\n  }\n\n  animateIntro() {\n\n    this.cameras.main.pan(this.renderer.width, this.renderer.height/2, 2000, 'Sine.easeInOut');\n    this.cameras.main.once(Phaser.Cameras.Scene2D.Events.PAN_COMPLETE, () => {\n      this.cameras.main.shake(2000, 0.02)\n      this.tweens.add({\n        targets: this.children.getByName('dark'),\n        y: -this.renderer.height * 0.3,\n        duration: 2000\n      })\n      this.tweens.add({\n        targets: this.children.getByName('partner'),\n        y: this.renderer.height,\n        delay: 2000,\n        duration: 2000,\n        ease: 'Sine.in'\n      })\n      this.tweens.add({\n        targets: this.children.getByName('player'),\n        y: this.renderer.height,\n        x: {\n          value: this.children.getByName('player').x + 150,\n          duration: 1000,\n          ease: 'Cubic.easeOut',\n        },\n        delay: 4000,\n        duration: 2000,\n        ease: 'Back.easeInOut',\n        onComplete: () => {\n          this.cameras.main.fade(1000, 0, 0, 0)\n          this.cameras.main.once('camerafadeoutcomplete', () => void this.scene.start('GameScene', { level: 1}))\n        }\n      })\n\n    })\n  }\n}\n","export const TICK_TIME = 250\nexport const PLAYER_TICK_TIME = TICK_TIME - 25\nexport const TILE_SIZE = 20\nexport const TILES_BY_SCREEN = 20\n\nexport const PIXEL_NAME = {\n  EMPTY: '000000',\n  PLAYER: 'ff00ff',\n  GROUND: '663300',\n  BOULDER: '999999',\n  WALL: '0000ff',\n  ENEMY: 'ff0000',\n  JEWEL: 'ffff00',\n  BARREL: '00ffff',\n  EXPLOSION: 'ffffff',\n  INTERACTION: '00ff00'\n}\n\nexport const DIRS = {\n  DOWN: 'ArrowDown',\n  UP: 'ArrowUp',\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n}\n\nexport const PIXEL_TO_TILEMAP_POSITION = {\n  [PIXEL_NAME.EMPTY]: 0,\n  [PIXEL_NAME.WALL]: 1,\n  [PIXEL_NAME.GROUND]: 2,\n  calculateWallTileWithNeighbours: (x, y, data) => {\n    const W = (data[x]||[])[y-1] === PIXEL_NAME.WALL ? 'W' : '-'\n    const N = (data[x-1]||[])[y] === PIXEL_NAME.WALL ? 'N' : '-'\n    const E = (data[x]||[])[y+1] === PIXEL_NAME.WALL ? 'E' : '-'\n    const S = (data[x+1]||[])[y] === PIXEL_NAME.WALL ? 'S' : '-'\n    switch(`${N}${E}${S}${W}`) {\n      case '----':\n        default:\n        return 11\n      case 'NESW':\n        return 12\n      case 'N---':\n        return 13\n      case '-E--':\n        return 14\n      case '--S-':\n        return 15\n      case '---W':\n        return 16\n      case 'NE--':\n        return 17\n      case '-ES-':\n        return 18\n      case '--SW':\n        return 19\n      case 'N--W':\n        return 20\n      case 'NES-':\n        return 22\n      case '-ESW':\n        return 23\n      case 'N-SW':\n        return 24\n      case 'NE-W':\n        return 25\n      case 'N-S-':\n        return 27\n      case '-E-W':\n        return 26\n    }\n  }\n}","export default class GameObject {\n  constructor({ id, isRigid, isBreakable, isFlat, isPickable, isCrushable, level }) {\n    this.id = id\n    // can't be moved nor affected by gravity\n    // wall, ground\n    this.isRigid = isRigid\n\n    // destroyable under circumstances like explosions\n    // ground, boulder, diamond\n    this.isBreakable = isBreakable\n\n    // rounded objects (like boulders and diamonds) above remain still\n    // character, ground, wall\n    this.isFlat = isFlat\n\n    // can be collected by characters\n    // diamond\n    this.isPickable = isPickable\n\n    // crush under pression\n    // character, enemies, dynamite, barrel\n    this.isCrushable = isCrushable\n\n    // energy to break things\n    this.power = 0\n\n    // how resistant to brake it is\n    this.strength = 0\n\n    // how hard can push\n    this.force = 0\n\n    // how much force can resist before move\n    this.weight = 0\n\n    this.level = level\n\n    this.position = null\n    this.alien = null\n    this.isMoveable = !this.isRigid\n  }\n\n  setPosition(coords) {\n    this.position = coords\n  }\n\n  canMove() {\n    return this.isMoveable\n  }\n  overrunBy(){}\n  runningOver(){}\n  canFallDown() { return false }\n  canFallLeft() { return false }\n  canFallRight() { return false }\n  \n}","import GameObject from './GameObject'\n\nexport default class Destroyable extends GameObject {\n  constructor(props) {\n    super(props)\n    this.inactive = false\n  }\n  overrunBy(el) {\n    if(el.power > this.strength) {\n      this.level.onDestroy(this)\n      this.inactive = true\n    }\n  }\n}\n","import Destroyable from './Destroyable'\n\nexport default class Moveable extends Destroyable {\n  move({ x, y }) {\n    super.setPosition({ x, y})\n    // this.isMoving = false\n  }\n}\n","import Moveable from './Moveable'\n\nexport default class Fallable extends Moveable {\n  constructor(props) {\n    super(props)\n    this.isFalling = 0 // increment on each loop that the element is falling\n  }\n\n  canFallDown() {\n    const nextPos = { x: this.position.x, y: this.position.y + 1 }\n    const destinationInBounds = this.level.isDestinationInBounds(nextPos.x, nextPos.y)\n    const destinationElement = destinationInBounds && this.level.getObjectAt(nextPos.x, nextPos.y)\n    const destinationIsEmpty = this.level.isDestinationEmpty(nextPos.x, nextPos.y)\n    const destinationIsCrushable = destinationElement.isCrushable && this.isFalling\n    const canFall = destinationIsEmpty || destinationIsCrushable\n\n    return canFall\n  }\n  canRollTo(x, y) {\n    const nextPos = { x, y }\n    const destinationInBounds = this.level.isDestinationInBounds(nextPos.x, nextPos.y)\n    const pathElement = destinationInBounds && this.level.getObjectAt(nextPos.x, this.position.y)\n    const pathClear = destinationInBounds && this.level.objectIsEmpty(pathElement)\n    const destinationElement = destinationInBounds && this.level.getObjectAt(nextPos.x, nextPos.y)\n    const destinationIsEmpty = this.level.objectIsEmpty(destinationElement)\n    const restingElement = destinationInBounds && this.level.getObjectAt(this.position.x, this.position.y + 1)\n    const canRest = !this.level.isDestinationEmpty(this.position.x, this.position.y + 1) && restingElement.isFlat\n    const canRoll = destinationInBounds && destinationIsEmpty && pathClear && !canRest && restingElement && !restingElement.isFalling\n    \n    return canRoll\n  }\n  canFallRight() {\n    return this.canRollTo(this.position.x + 1, this.position.y + 1)\n  }\n  canFallLeft() {\n    return this.canRollTo(this.position.x - 1, this.position.y + 1)\n  }\n}\n","import Fallable from './Fallable'\n\nexport default class Boulder extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: false,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n    this.strength = 5\n  }\n}\n","import Moveable from './Moveable'\nimport { DIRS } from '../../utils/constants'\n\nexport default class Character extends Moveable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n    this.pushingDirection = null\n  }\n  \n  canMove(x, y) {\n    const neighbour = this.level.getObjectAt(x, y)\n    const emptyPlace = this.level.objectIsEmpty(neighbour)\n    const canBrakeNeighbour = neighbour?.isBreakable && this.power >= neighbour.strength\n    return emptyPlace || canBrakeNeighbour || neighbour.isPickable ? neighbour : false\n  }\n\n  canMoveUp() {\n    return this.canMove(this.position.x, this.position.y - 1)\n  }\n  canMoveDown() {\n    return this.canMove(this.position.x, this.position.y + 1)\n  }\n  canMoveLeft() {\n    const neighbour = this.level.getObjectAt(this.position.x - 1, this.position.y)\n    const nothingBesides = this.level.isPositionClear(this.position.x - 2, this.position.y)\n    const isAboutToFall = this.level.isPositionClear(this.position.x - 1, this.position.y + 1)\n    const canPush = neighbour?.isMoveable && nothingBesides && !isAboutToFall\n\n    let canMove = this.canMove(this.position.x - 1, this.position.y)\n    if(!canMove && canPush) {\n      if(this.pushingDirection === DIRS.LEFT) {\n        canMove = true\n        this.level.moveObject(neighbour, { x: this.position.x - 2, y: this.position.y })\n        // clears pushing dir to let a new loop to push again\n        this.pushingDirection = ''\n      } else {\n        this.pushingDirection = DIRS.LEFT\n      }\n    }\n    return canMove\n  }\n  canMoveRight() {\n    const neighbour = this.level.getObjectAt(this.position.x + 1, this.position.y)\n    const nothingBesides = this.level.isPositionClear(this.position.x + 2, this.position.y)\n    const isAboutToFall = this.level.isPositionClear(this.position.x + 1, this.position.y + 1)\n    const canPush = neighbour?.isMoveable && nothingBesides && !isAboutToFall\n\n    let canMove = this.canMove(this.position.x + 1, this.position.y)\n    if(!canMove && canPush) {\n      if(this.pushingDirection === DIRS.RIGHT) {\n        canMove = true\n        this.level.moveObject(neighbour, { x: this.position.x + 2, y: this.position.y })\n        // clears pushing dir to let a new loop to push again\n        this.pushingDirection = ''\n      } else {\n        this.pushingDirection = DIRS.RIGHT\n      }\n    }\n    return canMove\n  }\n}\n","import Character from './Character'\nimport Player from './Player'\nimport { DIRS } from '../../utils/constants'\n\nexport default class Enemy extends  Character {\n  constructor(id, level) {\n    super(id, level)\n    this.moveIntentDir = DIRS.UP\n    this.anchorPosition = null\n  }\n  overrunBy(el) {\n    if(el.constructor.name !== Player.name) {\n      // this.alien.visible = false\n      // this.alien.alpha = 0.5\n      this.alien?.destroy()\n      this.level.onCharacterDie(this)\n    }\n  }\n}\n","import Character from './Character'\nimport Enemy from './Enemy'\nimport { DIRS } from '../../utils/constants'\n\nexport default class Player extends Character {\n  constructor(id, level) {\n    super(id, level)\n    this.power = 0.5\n    this.moveIntentDir = ''\n\n    const scene = level.scene\n    scene.input.keyboard.on('keydown', event => {\n      if(!event.repeat && [DIRS.UP, DIRS.DOWN, DIRS.LEFT, DIRS.RIGHT].includes(event.key)) {\n        this.moveIntentDir = event.key;\n        // calls loop to avoid delay between key press and visual movement at the begining of next loop\n        if(!this.isMoving) {\n          this.level.playerLoop()\n        }\n      }\n    });\n\n    scene.input.keyboard.on('keyup', event => {\n      if (this.moveIntentDir === event.key) {\n        this.moveIntentDir = ''\n        this.pushingDirection = null\n      }\n    });\n  }\n  destroy() {\n    const scene = this.level.scene\n    // animate die\n    scene.input.keyboard.off('keydown')\n    scene.input.keyboard.off('keyup')\n  }\n\n  die() {\n    this.inactive = true\n    this.alien.alpha = 0.5\n    this.destroy()\n  }\n\n  overrunBy(el) {\n    this.die()\n  }\n  runningOver(el) {\n    if(el.constructor.name === Enemy.name) {\n      this.die()\n    }\n  }\n}\n","import GameObject from './GameObject'\n\nexport default class Wall extends GameObject {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: true,\n      isBreakable: false,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n  }\n}\n","import { PIXEL_TO_TILEMAP_POSITION, PIXEL_NAME } from '../../utils/constants'\nimport Destroyable from './Destroyable'\n\nexport default class Ground extends Destroyable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: true,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n    this.strength = 1\n  }\n\n  overrunBy(el) {\n    super.overrunBy(el)\n    // assume is player who overruns ground\n    const layer = this.level.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    map.putTileAt(PIXEL_TO_TILEMAP_POSITION[PIXEL_NAME.EMPTY], this.position.x, this.position.y)\n  }\n}\n","export default class Empty {\n  constructor(id, level) {\n    this.id = id\n    this.level = level\n    this.isEmpty = true\n  }\n  setPosition(coords) {\n    this.position = coords\n  }\n}\n","import Empty from './Empty'\nimport Player from './Player'\n\nexport default class Interactive extends Empty {\n  overrunBy(el) {\n    console.log('Interactive overrunBy el', el)\n    if (el.constructor.name === Player.name) {\n      this.level.onInteractWith(this)\n    }\n  }\n}\n","import Fallable from './Fallable'\n\nexport default class Barrel extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n  }\n  explode() {\n    // this.alien.alpha = 0.5\n    this.alien.destroy()\n    this.level.onExplode(this)\n  }\n  overrunBy(el) {\n    this.explode()\n  }\n}\n","import GameObject from './GameObject'\nimport Empty from './Empty'\nimport { PIXEL_NAME, TICK_TIME } from '../../utils/constants'\n\nexport default class Explosion extends GameObject {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n    this.power = 10\n  }\n  setPosition(x, y) {\n    this.position = { x, y }\n    \n    const layer = this.level.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    const explosion = this.level.scene.add.graphics({ fillStyle: { color: 0xff0000, alpha: 1 } })\n    explosion.fillRect(0, 0, map.tileWidth, map.tileHeight)\n    explosion.setScale(layer.scaleX)\n\n    explosion.x = map.tileToWorldX(x)\n    explosion.y = map.tileToWorldY(y)\n\n    this.level.scene.tweens.add({\n      targets: explosion,\n      alpha: 0,\n      duration: TICK_TIME,\n      onComplete: () => {\n        explosion.destroy()\n        this.level.objects[y][x] = new Empty(PIXEL_NAME.EMPTY, this.level)\n      }\n    });\n    \n    this.alien = explosion\n    \n  }\n}\n","import Fallable from './Fallable'\nimport Player from './Player'\n\nexport default class Jewel extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: false,\n      isPickable: true,\n      isCrushable: false,\n      level\n    })\n    this.strength = 4\n  }\n  overrunBy(el) {\n    if(el.constructor.name === Player.name) {\n      this.alien.visible = false\n      // this.alien.alpha = 0.5\n      this.level.onJewelPick(this)\n    } else {\n      super.overrunBy(el)\n    }\n  }\n}\n","import Phaser from 'phaser'\nimport { TICK_TIME, PLAYER_TICK_TIME, PIXEL_NAME, DIRS, PIXEL_TO_TILEMAP_POSITION } from \"../../utils/constants\"\nimport {\n  Player,\n  Boulder,\n  Wall,\n  Empty,\n  Ground,\n  Barrel,\n  Enemy,\n  Interactive,\n  Jewel,\n  Explosion,\n} from '../objects'\n\nclass Level {\n  constructor(config) {\n    this.config = config\n    this.moveables = []\n    this.objects = []\n    this.scene = null\n    this.player = null\n    this.playerTimeoutId = 0\n    this.isPaused = false\n  }\n\n  connectToScene(phaserScene) {\n    this.scene = phaserScene\n    const layer = this.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    \n\n    this.objects = this.config.map((r, y) => r.map((c, x) => {\n      // factory\n      let element\n      switch(c) {\n        case PIXEL_NAME.WALL:\n          element = new Wall(c, this)\n          element.setPosition({ x, y })\n          break\n        case PIXEL_NAME.GROUND:\n          element = new Ground(c, this)\n          element.setPosition({ x, y })\n          break\n        case PIXEL_NAME.BOULDER:\n          const boulder = this.scene.add.sprite(48, 16).setOrigin(0, 0.25).play('boulder_idle')\n          boulder.setScale(layer.scaleX)\n          boulder.x = map.tileToWorldX(x)\n          boulder.y = map.tileToWorldY(y)\n          \n          element = new Boulder(c, this)\n          element.alien = boulder\n          break\n        case PIXEL_NAME.JEWEL:\n          const jewel = this.scene.add.graphics({ fillStyle: { color: 0xffff00, alpha: 1 } })\n          jewel.setScale(layer.scaleX)\n          // jewel.fillRect(0, 0, map.tileWidth * layer.scaleX, map.tileHeight * layer.scaleY)\n          jewel.fillRect(0, 0, map.tileWidth, map.tileHeight)\n\n          jewel.x = map.tileToWorldX(x)\n          jewel.y = map.tileToWorldY(y)\n          \n          element = new Jewel(c, this)\n          element.alien = jewel\n          break\n        case PIXEL_NAME.BARREL:\n          const barrel = this.scene.add.graphics({ fillStyle: { color: 0x663300, alpha: 1 } })\n          barrel.setScale(layer.scaleX)\n          // barrel.fillRect(0, 0, map.tileWidth * layer.scaleX, map.tileHeight * layer.scaleY)\n          barrel.fillRect(0, 0, map.tileWidth, map.tileHeight)\n\n          barrel.x = map.tileToWorldX(x)\n          barrel.y = map.tileToWorldY(y)\n          \n          element = new Barrel(c, this)\n          element.alien = barrel\n          break\n        case PIXEL_NAME.PLAYER:\n          const player = this.scene.add.sprite(48, 16).setOrigin(0, 0.25).play('brave_idle')\n          player.setScale(layer.scaleX)\n          player.x = map.tileToWorldX(x)\n          player.y = map.tileToWorldY(y)\n\n          player.name = 'brave'\n          player.on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n            if(!player.isMoving) {\n              // player.play('brave_idle')\n            }\n          })\n\n          element = new Player(c, this)\n          element.alien = player\n\n          // add shortcut reference\n          this.player = element\n          break\n        case PIXEL_NAME.ENEMY:\n          const enemy = this.scene.add.graphics({ fillStyle: { color: 0xff0000, alpha: 1 } })\n          enemy.fillRect(0, 0, map.tileWidth, map.tileHeight)\n          enemy.setScale(layer.scaleX)\n          this.scene.addToScalables(enemy, { x, y })\n          enemy.x = map.tileToWorldX(x)\n          enemy.y = map.tileToWorldY(y)\n          element = new Enemy(c, this)\n          element.alien = enemy\n          break\n        case PIXEL_NAME.INTERACTION:\n          element = new Interactive(c, this)\n          break\n        default:\n          element = new Empty(c, this)\n\n      }\n      element.setPosition({ x, y })\n      if (!this.objectIsEmpty(element) && !element.isRigid) {\n        // enters backward to start evaluating lower elements into gravityLoop\n        // this.moveables.unshift(element)\n        this.moveables.push(element)\n      }\n      this.onAddElement(element)\n      return element\n    }))\n  }\n\n  gravityLoop() {\n    if(this.isPaused) { return }\n    this.moveables.sort((a, b) => a.position.y - b.position.y).forEach(el => {\n      const canFallDown = el.canFallDown()\n      const canFallLeft = el.canFallLeft()\n      const canFallRight = el.canFallRight()\n      let nextPos\n      if(canFallDown) {\n        nextPos = { x: el.position.x, y: el.position.y + 1 }\n        el.isFalling++\n      }\n      if (!canFallDown && canFallLeft) {\n        nextPos = { x: el.position.x - 1, y: el.position.y}\n        if(el.isFalling) {\n          nextPos.y ++\n        }\n        el.isFalling++\n      }\n      if (!canFallDown && !canFallLeft && canFallRight) {\n        nextPos = { x: el.position.x + 1, y: el.position.y}\n        if(el.isFalling) {\n          nextPos.y ++\n        }\n        el.isFalling++\n      }\n\n      if (nextPos) {\n        this.moveObject(el, nextPos)\n      } else {\n        if(el.isFalling && el.constructor.name === Barrel.name) {\n          el.explode()\n        }\n        el.isFalling = 0\n      }\n    })\n\n    this.enemiesLoop()\n  }\n  enemiesLoop() {\n\n    if(this.isPaused) { return }\n    let nextPos, neighbour, isDestinationEmpty, isPerpToAnchor, newAnchor, nextDir, backToTrackDir, nextAnchorPos\n    \n    const helperDirCalc = (enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos) => {\n      neighbour = this.getObjectAt(nextPos.x, nextPos.y)\n      isDestinationEmpty = this.objectIsEmpty(neighbour) || neighbour?.constructor?.name === Player.name // this.isDestinationEmpty(nextPos.x, nextPos.y)\n      if (!isDestinationEmpty && !enemy.anchorPosition) {\n        enemy.anchorPosition = neighbour.position\n        // counter clockwise\n        enemy.moveIntentDir = nextDir\n      }\n      if (isDestinationEmpty && neighbour.constructor.name === Player.name) {\n        this.moveObject(enemy, nextPos)\n      }\n      if (isDestinationEmpty) {\n        if (!enemy.anchorPosition) {\n          enemy.moveIntentDir = nextDir\n          return\n        }\n        isPerpToAnchor = enemy.position.x === enemy.anchorPosition.x || enemy.position.y === enemy.anchorPosition.y\n        // scenario 1: enemy is perpendicular to anchor\n        if (isPerpToAnchor) {\n          // updates anchor counter clockwise\n          newAnchor = this.getObjectAt(nextAnchorPos.x, nextAnchorPos.y)\n          if (!this.objectIsEmpty(newAnchor) && newAnchor?.constructor?.name !== Player.name) {\n            enemy.anchorPosition = newAnchor.position\n          } else {\n            enemy.moveIntentDir = backToTrackDir\n          }\n        }\n        this.moveObject(enemy, nextPos)\n      } else {\n        enemy.anchorPosition = neighbour.position\n        enemy.moveIntentDir = nextDir\n      }\n    }\n    this.moveables\n    .filter(el => el.constructor.name === Enemy.name)\n    .forEach(enemy => {\n      // potential path finding mechanism @see https://github.com/qiao/PathFinding.js\n      // if(!enemy.path) {\n      //   const grid = new window.PF.Grid(this.objects.map(row => row.map(el => el.isEmpty ? 0 : 1)));\n      //   enemy.pathfinder = new window.PF.AStarFinder();\n      //   const path = enemy.pathfinder.findPath(enemy.position.x, enemy.position.y, thi.player.position.x, this.player.position.y, grid);\n      // }\n      switch(enemy.moveIntentDir) {\n        case DIRS.UP:\n          nextPos = { x: enemy.position.x, y: enemy.position.y - 1}\n          nextDir = DIRS.LEFT\n          backToTrackDir = DIRS.RIGHT\n          nextAnchorPos = { x: nextPos.x + 1, y: nextPos.y }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break\n        case DIRS.RIGHT:\n          nextPos = { x: enemy.position.x + 1, y: enemy.position.y}\n          nextDir = DIRS.UP\n          backToTrackDir = DIRS.DOWN\n          nextAnchorPos = { x: nextPos.x, y: nextPos.y + 1 }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break\n        case DIRS.DOWN:\n          nextPos = { x: enemy.position.x, y: enemy.position.y + 1}\n          nextDir = DIRS.RIGHT\n          backToTrackDir = DIRS.LEFT\n          nextAnchorPos = { x: nextPos.x - 1, y: nextPos.y }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break\n        case DIRS.LEFT:\n          nextPos = { x: enemy.position.x - 1, y: enemy.position.y}\n          nextDir = DIRS.DOWN\n          backToTrackDir = DIRS.UP\n          nextAnchorPos = { x: nextPos.x, y: nextPos.y - 1 }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break\n\n        default:\n      }\n    })\n  }\n  playerLoop() {\n    if(this.isPaused || this.player.inactive) { return }\n    clearTimeout(this.playerTimeoutId)\n    const player = this.player\n    \n    const nextPos = { x: player.position.x, y: player.position.y }\n    switch(player.moveIntentDir) {\n      case DIRS.UP:\n        if(player.canMoveUp()) nextPos.y -= 1\n        break\n      case DIRS.DOWN:\n        if(player.canMoveDown()) nextPos.y += 1\n        break\n      case DIRS.LEFT:\n        if(player.canMoveLeft()) nextPos.x -= 1\n        break\n      case DIRS.RIGHT:\n        if(player.canMoveRight()) nextPos.x += 1\n        break\n      default:\n    }\n    if ((player.position.x !== nextPos.x || player.position.y !== nextPos.y) && !player.isMoving) {\n      player.isMoving = true\n      if (player.position.x < nextPos.x) {\n        player.alien.setOrigin(0, 0.25)\n        player.alien.setFlipX(false)\n      }\n      if (player.position.x > nextPos.x) {\n        player.alien.setFlipX(true)\n        player.alien.setOrigin(0.25, 0.25)\n      }\n      player.alien.emit('player_moves', nextPos)\n      this.moveObject(player, nextPos)\n    }\n\n    this.playerTimeoutId = setTimeout(() => {\n      player.isMoving = false\n      player.alien.play('brave_idle')\n      if(player.moveIntentDir !== '') {\n        this.playerLoop()\n      }\n    }, PLAYER_TICK_TIME);\n  }\n  // afterPlayerLoop(cb) {\n  //   this.afterPlayerLoopCallbacks.push(cb)\n  // }\n  moveObject(el, pos) {\n    const layer = this.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    const origin = { x: el.position.x, y: el.position.y }\n    // assume destination is occupeable\n    const destinationElement = this.getObjectAt(pos.x, pos.y)\n    if (!this.objectIsEmpty(destinationElement) || destinationElement.constructor.name === Interactive.name) {\n      destinationElement.overrunBy(el)\n      el.runningOver(destinationElement)\n    }\n\n    if(el.inactive) return\n\n    // clear origin position\n    this.setObjectAt(origin.x, origin.y, new Empty(PIXEL_NAME.EMPTY, this))\n    // fill destination position\n    this.setObjectAt(pos.x, pos.y, el)\n    \n    // updates element position\n    el.move(pos)\n\n    if(el.constructor.name === Player.name) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: PLAYER_TICK_TIME,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          duration: PLAYER_TICK_TIME,\n        },\n      });\n      el.alien.play('brave_run')\n    }\n    if(el.constructor.name === Enemy.name) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          duration: TICK_TIME,\n        },\n      });\n    }\n    if(el.constructor.name === Jewel.name) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n    }\n    if(el.constructor.name === Barrel.name) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n    }\n    if(el.constructor.name === Boulder.name) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n      if (pos.x !== origin.x) {\n        el.alien.play(pos.x > origin.x ? 'boulder_roll_right' : 'boulder_roll_left')\n      }\n    }\n  }\n  pause() {\n    this.isPaused = true\n  }\n  resume() {\n    this.isPaused = false\n  }\n  onCharacterDie(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n    if (el.constructor.name === Player.name) {\n      // this.player = null\n    }\n  }\n  onJewelPick(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n  }\n  onDestroy(el) {\n    if(el.constructor.name === Boulder.name) {\n      // console.log(el);\n    }\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n  }\n  onExplode(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n    for(let x = el.position.x - 2; x <= el.position.x + 2; x++) {\n      for(let y = el.position.y - 2; y < el.position.y + 2; y++) {\n        const el = this.getObjectAt(x, y)\n        const explosion = new Explosion(PIXEL_NAME.EXPLOSION, this)\n        if(el.isBreakable || this.objectIsEmpty(el)) {\n          explosion.setPosition(x, y)\n          this.objects[y][x] = explosion\n        }\n        if (el && !this.objectIsEmpty(el)){\n          el.overrunBy(explosion)\n        }\n      }\n    }\n  }\n  onComplete() {\n    this.objects.forEach(row => row.forEach(el => {\n      if(el !== this.player && el.alien) {\n        el.alien.destroy()\n      }\n    }))\n    this.pause()\n    this.scene.events.emit('levelcompleted', this)\n    // this.moveables = []\n    // this.objects.map(el => el.alien?.destroy())\n  }\n  onInteractWith(el) {\n    console.warn(`implement interaction for ${this.id}`)\n  }\n  onAddElement(el) {\n    console.warn(`implement element added ${this.id}`)\n  }\n  getPlayerPos() { return this.player.position}\n  getConfigAt(x, y) {\n    return this.isDestinationInBounds(x, y) && this.config[y][x]\n  }\n  getCoords(id) {\n    const found = []\n    for(let i = 0; i < this.config.length; i++) {\n      for(let j = 0; j < this.config[i].length; j++) {\n        if (this.config[i][j] === id) {\n          found.push({x: j, y: i})\n        }\n      }\n    }\n    return found\n  }\n  getObjectAt(x, y) {\n    return this.isDestinationInBounds(x, y) && this.objects[y][x]\n  }\n  setObjectAt(x, y, obj) {\n    this.objects[y][x] = obj\n  }\n  isPositionClear(x, y) {\n    return this.getObjectAt(x, y).isEmpty\n  }\n  isDestinationInBounds(x, y) {\n    const xInBounds = x < this.config[0].length && x >= 0\n    const yInBounds = y < this.config.length && y >= 0\n    return xInBounds && yInBounds\n  }\n  objectIsEmpty(el) {\n    return el.isEmpty\n  }\n  isDestinationEmpty(x, y) {\n    return this.getObjectAt(x, y).isEmpty\n  }\n}\n\nexport default Level\n","import Phaser from 'phaser'\nimport { PIXEL_NAME, PIXEL_TO_TILEMAP_POSITION } from '../utils/constants'\nimport Level1 from './levels/level_1'\nimport Level2 from './levels/level_2'\n\nconst LEVELS = [Level1, Level2]\n\nexport default class LevelManager {\n  constructor(scene, currentLevel = 0) {\n    this.scene = scene\n    this.currentIndex = currentLevel - 1\n    this.current = LEVELS[this.currentIndex]\n    this.start()\n  }\n  \n  start() {\n    this.current = LEVELS[this.currentIndex]\n    this.current.config = this.generateConfig()\n    this.map = this.createMap()\n    this.current.connectToScene(this.scene)\n  }\n\n  next() {\n    // destroy and unload\n    this.currentIndex += 1\n    if (LEVELS.length[this.currentIndex]) {\n      this.start()\n    } else {\n      console.log(this.scene)\n      this.scene.scene.start('MenuScene')\n    }\n\n  }\n\n  generateConfig() {\n    const scene = this.scene\n    const levelId = this.current.id\n    var texture = scene.textures.get(levelId);\n    var image = texture.getSourceImage();\n    const levelConfig = Array(image.height).fill('000000').map(r => Array(image.width).fill('000000'))\n    for(let j = 0; j < image.width; j++) {\n      for(let i = 0; i < image.height; i++) {\n        const pixColor = scene.textures.getPixel(j, i, levelId)\n        const key = `${Phaser.Display.Color.ComponentToHex(pixColor.r)}${Phaser.Display.Color.ComponentToHex(pixColor.g)}${Phaser.Display.Color.ComponentToHex(pixColor.b)}`\n        levelConfig[i][j] = key\n      }\n    }\n    return levelConfig\n  }\n\n  createMap() {\n    const scene = this.scene\n    const levelData = this.current\n    const SCALE = scene.data.get('custom_scale')\n    const camera = this.scene.cameras.main\n\n    let map = this.map\n    if(map && map.scene) {\n      map.destroy()\n    }\n\n    // Creating a blank tilemap with dimensions matching the dungeon\n    map = scene.make.tilemap({ tileWidth: 20, tileHeight: 20, width: levelData.config[0].length, height: levelData.config.length });\n\n    // addTilesetImage: function (tilesetName, key, tileWidth, tileHeight, tileMargin, tileSpacing, gid)\n    let tileset = map.addTilesetImage('tiles', 'main-tiles', 20, 20, 1, 2);\n\n    let layer = map.createBlankLayer('layer_1', tileset);\n    layer.name = 'layer_1'\n    layer.depth = 0\n\n    layer.setScale(SCALE)\n\n    // Fill with black tiles\n    layer.fill(1)\n\n    levelData.config.forEach((row, x) => {\n      row.forEach((el, y) => {\n        const tile = levelData.config[x][y]\n        if (![PIXEL_NAME.EMPTY, PIXEL_NAME.PLAYER, PIXEL_NAME.BOULDER, PIXEL_NAME.INTERACTION].includes(tile)) {\n          if (tile === PIXEL_NAME.WALL) {\n            const tile = PIXEL_TO_TILEMAP_POSITION.calculateWallTileWithNeighbours(x, y, levelData.config)\n            map.putTileAt(tile, y, x)\n          } else {\n            map.putTileAt(PIXEL_TO_TILEMAP_POSITION[tile], y, x)\n          }\n        } else {\n          map.putTileAt(PIXEL_TO_TILEMAP_POSITION[PIXEL_NAME.EMPTY], y, x)\n        }\n      })\n    })\n\n    // set up camera\n    camera.setBounds(0, 0, layer.width * layer.scaleX, layer.height * layer.scaleY);\n    camera.zoom = 1\n\n    return map\n  }\n}","import LevelBase from './levelBase'\n\nclass Level1 extends LevelBase {\n  constructor() {\n    super()\n    this.id = 'level_1'\n    this.name = 'The beginning'\n  }\n\n  connectToScene(scene) {\n    super.connectToScene(scene)\n    scene.cameras.main.once('camerafadeincomplete', () => {\n      alert('INTRO MESSAGE, \"Guess I can move those boulders\"')\n    })\n  }\n\n  onInteractWith(el) {\n    if(el.position.x === 18 && el.position.y === 14) {\n      alert('>>> Level 1 completed <<<')\n      this.onComplete()\n    }\n  }\n}\n\nexport default new Level1()\n","import LevelBase from './levelBase'\nimport { Interactive } from '../objects'\n\nclass Level2 extends LevelBase {\n  constructor() {\n    super()\n    this.id = 'level_2'\n    this.name = 'The finding'\n  }\n\n  // connectToScene(scene) {\n  //   super.connectToScene(scene)\n  //   scene.cameras.main.once('camerafadeincomplete', () => {\n  //     alert('INTRO MESSAGE, \"Guess I can move those boulders\"')\n  //   })\n  // }\n\n  onInteractWith(el) {\n    if(el.position.x === 6 && el.position.y === 6) {\n      this.player.moveIntentDir = ''\n      alert('FIRST CLUE, \"Hmm, these walls looks different. Like someone have put them here.\"')\n    }\n    if(el.position.x === 5 && el.position.y === 12) {\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      this.player.moveIntentDir = ''\n      alert('FIRST TOOL, \"Great! Now, with this pickaxe I can break all those clods\"')\n      this.player.power = 1\n      map.putTileAt(19, el.position.x, el.position.y)\n    }\n    if(el.position.x === 19 && el.position.y === 1) {\n      alert('>>> Level 2 completed <<<')\n      this.onComplete()\n    }\n  }\n\n  onAddElement(el) {\n    if(el.constructor.name === Interactive.name && el?.position.x === 5 && el?.position.y === 12) {\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      map.putTileAt(54, el.position.x, el.position.y)\n    }\n  }\n}\n\nexport default new Level2()\n","import Phaser from 'phaser'\nimport { TICK_TIME } from '../utils/constants'\n\nexport default class Rules {\n  constructor(scene) {\n    this.scene = scene\n    // gravity loop\n    this.timer = 0\n    this.worldTickFreq = TICK_TIME\n    scene.events.addListener(Phaser.Scenes.Events.UPDATE, (...props) => void this.onSceneUpdate(...props))\n\n    this.setUpPuseResumeGame()\n    this.setUpCameraFollowPlayer()\n    scene.events.on('levelcompleted', () => {\n      scene.cameras.main.fade(1000, 0, 0)\n      scene.cameras.main.once('camerafadeoutcomplete', () => {\n        this.scene.levels.next()\n        scene.cameras.main.fadeIn(1000, 0, 0)\n      })\n    })\n  }\n\n  setUpCameraFollowPlayer() {\n    this.scene.events.addListener(Phaser.Scenes.Events.UPDATE, () => {\n      const cam = this.scene.cameras.main\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      const {x, y} = this.scene.levels.current.getPlayerPos()\n      if (cam && map) {\n        var smoothFactor = 0.9;\n  \n        cam.scrollX = smoothFactor * cam.scrollX + (1 - smoothFactor) * (map.tileToWorldX(x) - cam.width * 0.5);\n        cam.scrollY = smoothFactor * cam.scrollY + (1 - smoothFactor) * (map.tileToWorldY(y) - cam.height * 0.5);\n      }\n    })\n  }\n\n  setUpPuseResumeGame() {\n    const pauseGame = () => {\n      this.scene.levels.current.pause()\n      this.scene.events.emit('game_paused')\n    }\n    const resumeGame = () => {\n      this.scene.levels.current.resume()\n      this.scene.events.emit('game_resumed')\n    }\n    this.scene.input.keyboard.on('keydown', event => {\n      if(event.key === 'Escape') {\n        const action = this.scene.levels.current.isPaused ? resumeGame : pauseGame\n        action()\n      }\n    })\n  }\n\n  onSceneUpdate(time, delta) {\n    this.timer += delta\n    if (this.timer >= this.worldTickFreq) {\n      while (this.timer > this.worldTickFreq) {\n          this.timer -= this.worldTickFreq\n      }\n      this.scene.levels.current.gravityLoop()\n    }\n  }\n}\n","export default class UI {\n  constructor(scene) {\n    this.scene = scene\n\n    this.scene.events.on('game_paused', () => alert('Game paused, press ESC to resume'))\n    this.scene.events.on('game_resumed', () => alert('Game resumes now'))\n  }\n}","import Phaser from 'phaser'\nimport { TILES_BY_SCREEN, TILE_SIZE, TICK_TIME } from '../utils/constants';\nimport LevelManager from '../components/LevelManager'\nimport Rules from '../components/Rules'\nimport UI from '../components/UI'\n\nconst SCALE = Math.round((window.innerWidth/TILES_BY_SCREEN * 100 / TILE_SIZE/100)*100)/100\n\nexport default class GameScene extends Phaser.Scene {\n  constructor () {\n    super('GameScene');\n  }\n\n  create(data = {}) {\n    this.data.set('custom_scale', SCALE)\n\n    this.game.scale.scaleMode = Phaser.Scale.RESIZE\n    this.handleScales()\n    this.createAnimations()\n    this.levels = new LevelManager(this, data.level)\n\n    this.cameras.main.fadeIn(1000, 0, 0, 0)\n    new Rules(this)\n    new UI(this)\n  }\n  \n  handleScales() {\n    const SCALE = this.data.get('custom_scale')\n    const scalables = new Map()\n    this.clearScalables = () => void scalables.clear()\n      this.removeFromScalables = el => scalables.delete(el)\n      this.addToScalables = (el, coords) => {\n        el.setScale(SCALE)\n        scalables.set(el, coords)\n      }\n      this.updateScale = scale => {\n        scalables.forEach((coords, el) => el?.setScale(scale))\n      }\n      window.addEventListener('resize', () => {\n        const scale = Math.round((window.innerWidth/TILES_BY_SCREEN * 100 / TILE_SIZE/100)*100)/100\n        const layer = this.scene.children.getByName('layer_1')\n        const { tilemap: map } = layer\n        layer.setScale(scale)\n        // this.children.list.forEach(el => {\n        //   if(el.type === 'TilemapLayer') {\n        //     el.setScale(scale)\n        //   }\n        // })\n        this.data.get('level').objects.forEach((rows, y) => {\n          rows.forEach((obj, x) => {\n            if(obj.alien) {\n              obj.alien.setScale(scale)\n              obj.alien.x = map.tileToWorldX(x)\n              obj.alien.y = map.tileToWorldY(y)\n            }\n          })\n        })\n        const camera = this.cameras.main\n        camera.setBounds(0, 0, layer.width * layer.scaleX, layer.height * layer.scaleY);\n      })\n  }\n\n  createAnimations() {\n    this.anims.create({\n        key: 'boulder_roll_right',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0, 1, 2, 0 ] }),\n        frameRate: 12,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'boulder_roll_left',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0, 2, 1, 0 ] }),\n        frameRate: 12,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'boulder_idle',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0 ] }),\n        frameRate: 1,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'brave_idle',\n        frames: this.anims.generateFrameNumbers('brave', { frames: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 0 ] }),\n        frameRate: 4,\n        repeat: -1\n      })\n      this.anims.create({\n        key: 'brave_run',\n        frames: this.anims.generateFrameNumbers('brave', { frames: [ 3, 4, 5, 3 ] }),\n        frameRate: (1000/TICK_TIME) * 4,\n        repeat: 0\n      })\n  }\n}","import Phaser from 'phaser'\nimport Canvas from './libs/react-phaser-fiber/components/Canvas'\nimport MenuScene from './scenes/MenuScene'\nimport IntroScene from './scenes/IntroScene'\nimport GameScene from './scenes/GameScene'\n\nconst gameConfig = {\n  width: \"100%\",\n  height: \"100%\",\n  type: Phaser.AUTO,\n  backgroundColor: '#000000',\n  disableContextMenu: true,\n  pixelArt: true,\n  roundPixels: false,\n  scene: [MenuScene, IntroScene, GameScene]\n}\nfunction Game() {\n  return (\n    <Canvas args={gameConfig} />\n  );\n}\n\nexport default Game;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}