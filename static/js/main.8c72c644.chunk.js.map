{"version":3,"sources":["libs/react-phaser-fiber/PhaserProvider.js","libs/react-phaser-fiber/components/Canvas.js","scenes/MenuScene.js","scenes/IntroScene.js","utils/constants.js","components/objects/GameObject.js","components/objects/Destroyable.js","components/objects/Moveable.js","components/objects/Fallable.js","components/objects/Boulder.js","components/objects/Character.js","components/objects/Enemy.js","components/objects/Player.js","components/objects/Wall.js","components/objects/Ground.js","components/objects/Empty.js","components/objects/Interactive.js","components/objects/Barrel.js","components/objects/Explosion.js","components/objects/Jewel.js","components/levels/levelBase.js","components/LevelManager.js","components/levels/level_1.js","components/levels/level_2.js","components/Rules.js","components/UI.js","scenes/GameScene.js","Game.js","reportWebVitals.js","index.js"],"names":["context","createContext","PhaserProvider","game","children","useState","ready","setReady","useEffect","Provider","value","Canvas","forwardRef","canvasRef","args","fallbackRef","useRef","ref","setGame","callbacks","postBoot","scene","scenes","events","once","Phaser","Scenes","Events","PRE_RENDER","s","load","on","Loader","COMPLETE","Game","current","MenuScene","this","script","image","process","spritesheet","frameWidth","frameHeight","PROGRESS","console","log","window","WebFont","custom","families","active","emit","sys","config","arrow","add","graphics","fillStyle","color","alpha","fillTriangle","setPosition","currentOption","menuOptions","label","disabled","onSelect","start","level","forEach","o","idx","text","fontFamily","fontSize","fill","setAlpha","input","keyboard","event","newOption","key","length","Scene","IntroScene","forest","fillRect","renderer","width","height","forestText","container","dark","name","player","partner","cameras","main","fadeIn","animateIntro","bind","pan","Cameras","Scene2D","PAN_COMPLETE","shake","tweens","targets","getByName","y","duration","delay","ease","x","onComplete","fade","TICK_TIME","PIXEL_NAME","EMPTY","PLAYER","GROUND","BOULDER","WALL","ENEMY","JEWEL","BARREL","EXPLOSION","INTERACTION","DIRS","DOWN","UP","LEFT","RIGHT","PIXEL_TO_TILEMAP_POSITION","data","W","N","E","S","GameObject","id","isRigid","isBreakable","isFlat","isPickable","isCrushable","power","strength","force","weight","position","alien","isMoveable","coords","className","Destroyable","props","inactive","el","onDestroy","Moveable","Fallable","isFalling","nextPos","destinationElement","isDestinationInBounds","getObjectAt","destinationIsEmpty","isDestinationEmpty","destinationIsCrushable","destinationInBounds","pathElement","pathClear","objectIsEmpty","restingElement","canRest","canRollTo","Boulder","Character","pushingDirection","neighbour","emptyPlace","canBrakeNeighbour","canMove","nothingBesides","isPositionClear","isAboutToFall","canPush","moveObject","Enemy","moveIntentDir","anchorPosition","constructor","Player","destroy","onCharacterDie","removeListener","onKeyDown","addListener","onKeyUp","repeat","includes","isMoving","playerLoop","off","die","Wall","Ground","tilemap","putTileAt","Empty","isEmpty","Interactive","onInteractWith","Barrel","onExplode","explode","Explosion","layer","map","explosion","tileWidth","tileHeight","setScale","scaleX","tileToWorldX","tileToWorldY","objects","Jewel","visible","onJewelPick","Level","moveables","playerTimeoutId","isPaused","phaserScene","r","c","element","boulder","sprite","setOrigin","play","jewel","barrel","Animations","ANIMATION_COMPLETE","enemy","addToScalables","push","onAddElement","sort","a","b","canFallDown","canFallLeft","canFallRight","enemiesLoop","newAnchor","nextDir","backToTrackDir","nextAnchorPos","helperDirCalc","filter","clearTimeout","canMoveUp","canMoveDown","canMoveLeft","canMoveRight","setFlipX","setTimeout","pos","origin","overrunBy","runningOver","setObjectAt","move","e","row","pause","warn","found","i","j","obj","xInBounds","yInBounds","LEVELS","alert","LevelBase","LevelManager","currentLevel","currentIndex","generateConfig","createMap","connectToScene","resume","levelId","textures","get","getSourceImage","levelConfig","Array","pixColor","getPixel","Display","Color","ComponentToHex","g","levelData","SCALE","camera","tileset","make","addTilesetImage","createBlankLayer","depth","tile","calculateWallTileWithNeighbours","setBounds","scaleY","zoom","Rules","timer","worldTickFreq","onSceneUpdate","UPDATE","setUpPuseResumeGame","setUpCameraFollowPlayer","levels","next","cam","getPlayerPos","smoothFactor","scrollX","scrollY","time","delta","gravityLoop","UI","Math","round","innerWidth","GameScene","set","scale","scaleMode","Scale","RESIZE","handleScales","createAnimations","scalables","Map","clearScalables","clear","removeFromScalables","delete","updateScale","addEventListener","rows","anims","create","frames","generateFrameNumbers","frameRate","gameConfig","type","AUTO","backgroundColor","disableContextMenu","pixelArt","roundPixels","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","style","bottom","right","version","document","getElementById"],"mappings":"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","file":"static/js/main.8c72c644.chunk.js","sourcesContent":["import { useState, createContext, useEffect } from 'react'\n\nexport const context = createContext()\n\nconst PhaserProvider = ({ game, children }) => {\n  const [ready, setReady] = useState()\n  \n  // delay to let the context value to propagate before rendering children.\n  // this way children can implement usePhaser confident that objects returned are not null\n  useEffect(() => {\n    setReady(!!game)\n  }, [game])\n\n  return (\n    <context.Provider value={{ game }}>\n      {\n        ready ? children : null\n      }\n    </context.Provider>\n  )\n}\n\nexport default PhaserProvider\n","import Phaser from 'phaser'\nimport { useEffect, forwardRef, useRef, useState } from 'react'\nimport PhaserProvider from '../PhaserProvider'\n\n/**\n * Creates a new Phaser.Game with given arguments.\n * triggers functions to store game into context\n */\nconst Canvas = forwardRef(({\n  args,\n  children\n}, canvasRef) => {\n  const fallbackRef = useRef()\n  const ref = canvasRef || fallbackRef\n  const [game, setGame] = useState()\n  const [ready, setReady] = useState()\n  args.callbacks = { postBoot: game => {\n    setGame(game)\n    game.scene.scenes[0].events.once(Phaser.Scenes.Events.PRE_RENDER, s => {\n      game.scene.scenes[0].load.on(Phaser.Loader.Events.COMPLETE, () => setReady(true))\n      \n    })\n  }}\n  useEffect(() => {\n\n    const game = new Phaser.Game(args)\n    ref.current = game\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return ready ? <PhaserProvider game={game}>{children}</PhaserProvider> : null\n})\n\nexport default Canvas\n","import Phaser from 'phaser'\n\nexport default class MenuScene extends Phaser.Scene {\n  constructor () {\n    super('MenuScene');\n  }\n\n  preload () {\n    this.load.script('webfont', 'https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js');\n    this.load.image('main-tiles', process.env.PUBLIC_URL + '/assets/tilemaps/tilemap_20x20.png');\n    this.load.image('level_1', process.env.PUBLIC_URL + '/assets/maps/level_1.png');\n    this.load.image('level_2', process.env.PUBLIC_URL + '/assets/maps/level_2.png');\n    this.load.spritesheet('boulder', process.env.PUBLIC_URL + '/assets/sprites/boulder_sprite.png', { frameWidth: 26, frameHeight: 26 });\n    this.load.spritesheet('brave', process.env.PUBLIC_URL + '/assets/sprites/brave_sprite.png', { frameWidth: 26, frameHeight: 26 });\n    this.load.on(Phaser.Loader.Events.PROGRESS, console.log)\n  }\n\n  create() {\n    window.WebFont.load({\n      custom: {\n          families: [ 'GameGirl' ]\n      },\n      active: () => {\n        this.events.emit('scene_ready', this.sys.config)\n        const arrow = this.add.graphics({ fillStyle: { color: 0xffffff, alpha: 1 } })\n        arrow.fillTriangle(0, 0, 5, 5, 0, 10).setPosition(70, 2)\n        let currentOption = 0\n        const menuOptions = [{\n          label: 'New Game',\n          disabled: false,\n          onSelect: () => this.scene.start('IntroScene')\n        }, {\n          label: 'Level 1',\n          disabled: false,\n          onSelect: () => this.scene.start('GameScene', { level: 1 })\n        }, {\n          label: 'Level 2',\n          disabled: false,\n          onSelect: () => this.scene.start('GameScene', { level: 2 })\n        }]\n        menuOptions.forEach((o, idx) => {\n          this.add.text(80, 12 * idx + 1, o.label,\n            {\n              fontFamily: 'GameGirl',\n              fontSize: \"10px\",\n              fill: \"#ffffff\",\n            }\n          ).setAlpha(o.disabled ? 0.5 : 1)\n        })\n\n        this.input.keyboard.on('keydown', event => {\n          let newOption = false\n          if (event.key === 'ArrowUp') {\n            newOption = currentOption > 0 ? currentOption - 1 : menuOptions.length - 1\n          }\n          if (event.key === 'ArrowDown') {\n            newOption = currentOption < menuOptions.length - 1 ? currentOption + 1 : 0\n          }\n          if(newOption !== false) {\n            arrow.setPosition(70, (12 * newOption) + 2)\n            currentOption = newOption\n          }\n          if (event.key === 'Enter') {\n            if(!menuOptions[currentOption].disabled) {\n              menuOptions[currentOption].onSelect()\n            }\n          }\n        })\n      }\n    })\n  }\n}\n","import Phaser from 'phaser'\n\nexport default class IntroScene extends Phaser.Scene {\n  constructor () {\n    super('IntroScene');\n  }\n\n  preload () {\n    \n  }\n\n  create() {\n    const forest = this.add.graphics({ fillStyle: { color: 0x00ff00, alpha: 1 } })\n    forest.fillRect(0, 0, this.renderer.width * 2, this.renderer.height)\n    const forestText = this.add.text(80, 10, \"forest\",\n      {\n        fontFamily: 'GameGirl',\n        fontSize: \"10px\",\n        fill: \"#ffffff\",\n      }\n    )\n    const container = this.add.container()\n    container.add(forest)\n    container.add(forestText)\n    const ground = this.add.graphics({ fillStyle: { color: 0x654321, alpha: 1 } })\n    ground.fillRect(0, this.renderer.height - this.renderer.height * 0.3, this.renderer.width * 2, this.renderer.height * 0.3)\n    this.add.text(80, this.renderer.height - this.renderer.height * 0.3 + 10, \"ground\",\n      {\n        fontFamily: 'GameGirl',\n        fontSize: \"10px\",\n        fill: \"#ffffff\",\n      }\n    )\n\n    const dark = this.add.graphics({ fillStyle: { color: 0x000000, alpha: 1 } })\n    dark.fillRect(this.renderer.width + 100, this.renderer.height, 200, this.renderer.height * 0.3)\n    dark.name = 'dark'\n\n    const player = this.add.graphics({ fillStyle: { color: 0xb75331, alpha: 1 } })\n    player.fillRect(this.renderer.width, this.renderer.height - this.renderer.height * 0.3 - 50, 50, 50)\n    player.name = 'player'\n\n    const partner = this.add.graphics({ fillStyle: { color: 0xdab263, alpha: 1 } })\n    partner.fillRect(this.renderer.width + 200, this.renderer.height - this.renderer.height * 0.3 - 50, 50, 50)\n    partner.name = 'partner'\n    \n    this.cameras.main.fadeIn(1000, 0, 0, 0)\n    this.cameras.main.once('camerafadeincomplete', this.animateIntro.bind(this))\n  }\n\n  animateIntro() {\n\n    this.cameras.main.pan(this.renderer.width, this.renderer.height/2, 2000, 'Sine.easeInOut');\n    this.cameras.main.once(Phaser.Cameras.Scene2D.Events.PAN_COMPLETE, () => {\n      this.cameras.main.shake(2000, 0.02)\n      this.tweens.add({\n        targets: this.children.getByName('dark'),\n        y: -this.renderer.height * 0.3,\n        duration: 2000\n      })\n      this.tweens.add({\n        targets: this.children.getByName('partner'),\n        y: this.renderer.height,\n        delay: 2000,\n        duration: 2000,\n        ease: 'Sine.in'\n      })\n      this.tweens.add({\n        targets: this.children.getByName('player'),\n        y: this.renderer.height,\n        x: {\n          value: this.children.getByName('player').x + 150,\n          duration: 1000,\n          ease: 'Cubic.easeOut',\n        },\n        delay: 4000,\n        duration: 2000,\n        ease: 'Back.easeInOut',\n        onComplete: () => {\n          this.cameras.main.fade(1000, 0, 0, 0)\n          this.cameras.main.once('camerafadeoutcomplete', () => void this.scene.start('GameScene', { level: 1}))\n        }\n      })\n\n    })\n  }\n}\n","export const TICK_TIME = 250\nexport const PLAYER_TICK_TIME = TICK_TIME - 25\nexport const TILE_SIZE = 20\nexport const TILES_BY_SCREEN = 20\n\nexport const PIXEL_NAME = {\n  EMPTY: '000000',\n  PLAYER: 'ff00ff',\n  GROUND: '663300',\n  BOULDER: '999999',\n  WALL: '0000ff',\n  ENEMY: 'ff0000',\n  JEWEL: 'ffff00',\n  BARREL: '00ffff',\n  EXPLOSION: 'ffffff',\n  INTERACTION: '00ff00'\n}\n\nexport const DIRS = {\n  DOWN: 'ArrowDown',\n  UP: 'ArrowUp',\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n}\n\nexport const PIXEL_TO_TILEMAP_POSITION = {\n  [PIXEL_NAME.EMPTY]: 0,\n  [PIXEL_NAME.WALL]: 1,\n  [PIXEL_NAME.GROUND]: 2,\n  calculateWallTileWithNeighbours: (x, y, data) => {\n    const W = (data[x]||[])[y-1] === PIXEL_NAME.WALL ? 'W' : '-'\n    const N = (data[x-1]||[])[y] === PIXEL_NAME.WALL ? 'N' : '-'\n    const E = (data[x]||[])[y+1] === PIXEL_NAME.WALL ? 'E' : '-'\n    const S = (data[x+1]||[])[y] === PIXEL_NAME.WALL ? 'S' : '-'\n    switch(`${N}${E}${S}${W}`) {\n      case '----':\n        default:\n        return 11\n      case 'NESW':\n        return 12\n      case 'N---':\n        return 13\n      case '-E--':\n        return 14\n      case '--S-':\n        return 15\n      case '---W':\n        return 16\n      case 'NE--':\n        return 17\n      case '-ES-':\n        return 18\n      case '--SW':\n        return 19\n      case 'N--W':\n        return 20\n      case 'NES-':\n        return 22\n      case '-ESW':\n        return 23\n      case 'N-SW':\n        return 24\n      case 'NE-W':\n        return 25\n      case 'N-S-':\n        return 27\n      case '-E-W':\n        return 26\n    }\n  }\n}","export default class GameObject {\n  constructor({ id, isRigid, isBreakable, isFlat, isPickable, isCrushable, level }) {\n    this.id = id\n    // can't be moved nor affected by gravity\n    // wall, ground\n    this.isRigid = isRigid\n\n    // destroyable under circumstances like explosions\n    // ground, boulder, diamond\n    this.isBreakable = isBreakable\n\n    // rounded objects (like boulders and diamonds) above remain still\n    // character, ground, wall\n    this.isFlat = isFlat\n\n    // can be collected by characters\n    // diamond\n    this.isPickable = isPickable\n\n    // crush under pression\n    // character, enemies, dynamite, barrel\n    this.isCrushable = isCrushable\n\n    // energy to break things\n    this.power = 0\n\n    // how resistant to brake it is\n    this.strength = 0\n\n    // how hard can push\n    this.force = 0\n\n    // how much force can resist before move\n    this.weight = 0\n\n    this.level = level\n\n    this.position = null\n    this.alien = null\n    this.isMoveable = !this.isRigid\n  }\n\n  setPosition(coords) {\n    this.position = coords\n  }\n\n  canMove() {\n    return this.isMoveable\n  }\n  overrunBy(){}\n  runningOver(){}\n  canFallDown() { return false }\n  canFallLeft() { return false }\n  canFallRight() { return false }\n  \n}\n\nGameObject.className = 'GameObject'\n","import GameObject from './GameObject'\n\nexport default class Destroyable extends GameObject {\n  constructor(props) {\n    super(props)\n    this.inactive = false\n  }\n  overrunBy(el) {\n    if(el.power > this.strength) {\n      this.level.onDestroy(this)\n      this.inactive = true\n    }\n  }\n}\n\nDestroyable.className = 'Destroyable'\n","import Destroyable from './Destroyable'\n\nexport default class Moveable extends Destroyable {\n  move({ x, y }) {\n    super.setPosition({ x, y})\n    // this.isMoving = false\n  }\n}\n\nMoveable.className = 'Moveable'\n","import Moveable from './Moveable'\n\nexport default class Fallable extends Moveable {\n  constructor(props) {\n    super(props)\n    this.isFalling = 0 // increment on each loop that the element is falling\n  }\n\n  canFallDown() {\n    const nextPos = { x: this.position.x, y: this.position.y + 1 }\n    const destinationInBounds = this.level.isDestinationInBounds(nextPos.x, nextPos.y)\n    const destinationElement = destinationInBounds && this.level.getObjectAt(nextPos.x, nextPos.y)\n    const destinationIsEmpty = this.level.isDestinationEmpty(nextPos.x, nextPos.y)\n    const destinationIsCrushable = destinationElement.isCrushable && this.isFalling\n    const canFall = destinationIsEmpty || destinationIsCrushable\n\n    return canFall\n  }\n  canRollTo(x, y) {\n    const nextPos = { x, y }\n    const destinationInBounds = this.level.isDestinationInBounds(nextPos.x, nextPos.y)\n    const pathElement = destinationInBounds && this.level.getObjectAt(nextPos.x, this.position.y)\n    const pathClear = destinationInBounds && this.level.objectIsEmpty(pathElement)\n    const destinationElement = destinationInBounds && this.level.getObjectAt(nextPos.x, nextPos.y)\n    const destinationIsEmpty = this.level.objectIsEmpty(destinationElement)\n    const restingElement = destinationInBounds && this.level.getObjectAt(this.position.x, this.position.y + 1)\n    const canRest = !this.level.isDestinationEmpty(this.position.x, this.position.y + 1) && restingElement.isFlat\n    const canRoll = destinationInBounds && destinationIsEmpty && pathClear && !canRest && restingElement && !restingElement.isFalling\n    \n    return canRoll\n  }\n  canFallRight() {\n    return this.canRollTo(this.position.x + 1, this.position.y + 1)\n  }\n  canFallLeft() {\n    return this.canRollTo(this.position.x - 1, this.position.y + 1)\n  }\n}\n\nFallable.className = 'Fallable'\n","import Fallable from './Fallable'\n\nexport default class Boulder extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: false,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n    this.strength = 5\n  }\n}\nBoulder.className = 'Boulder'\n","import Moveable from './Moveable'\nimport { DIRS } from '../../utils/constants'\n\nexport default class Character extends Moveable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n    this.pushingDirection = null\n  }\n  \n  canMove(x, y) {\n    const neighbour = this.level.getObjectAt(x, y)\n    const emptyPlace = this.level.objectIsEmpty(neighbour)\n    const canBrakeNeighbour = neighbour?.isBreakable && this.power >= neighbour.strength\n    return emptyPlace || canBrakeNeighbour || neighbour.isPickable ? neighbour : false\n  }\n\n  canMoveUp() {\n    return this.canMove(this.position.x, this.position.y - 1)\n  }\n  canMoveDown() {\n    return this.canMove(this.position.x, this.position.y + 1)\n  }\n  canMoveLeft() {\n    const neighbour = this.level.getObjectAt(this.position.x - 1, this.position.y)\n    const nothingBesides = this.level.isPositionClear(this.position.x - 2, this.position.y)\n    const isAboutToFall = this.level.isPositionClear(this.position.x - 1, this.position.y + 1)\n    const canPush = neighbour?.isMoveable && nothingBesides && !isAboutToFall\n\n    let canMove = this.canMove(this.position.x - 1, this.position.y)\n    if(!canMove && canPush) {\n      if(this.pushingDirection === DIRS.LEFT) {\n        canMove = true\n        this.level.moveObject(neighbour, { x: this.position.x - 2, y: this.position.y })\n        // clears pushing dir to let a new loop to push again\n        this.pushingDirection = ''\n      } else {\n        this.pushingDirection = DIRS.LEFT\n      }\n    }\n    return canMove\n  }\n  canMoveRight() {\n    const neighbour = this.level.getObjectAt(this.position.x + 1, this.position.y)\n    const nothingBesides = this.level.isPositionClear(this.position.x + 2, this.position.y)\n    const isAboutToFall = this.level.isPositionClear(this.position.x + 1, this.position.y + 1)\n    const canPush = neighbour?.isMoveable && nothingBesides && !isAboutToFall\n\n    let canMove = this.canMove(this.position.x + 1, this.position.y)\n    if(!canMove && canPush) {\n      if(this.pushingDirection === DIRS.RIGHT) {\n        canMove = true\n        this.level.moveObject(neighbour, { x: this.position.x + 2, y: this.position.y })\n        // clears pushing dir to let a new loop to push again\n        this.pushingDirection = ''\n      } else {\n        this.pushingDirection = DIRS.RIGHT\n      }\n    }\n    return canMove\n  }\n}\n\nCharacter.className = 'Character'\n","import Character from './Character'\nimport Player from './Player'\nimport { DIRS } from '../../utils/constants'\n\nexport default class Enemy extends  Character {\n  constructor(id, level) {\n    super(id, level)\n    this.moveIntentDir = DIRS.UP\n    this.anchorPosition = null\n  }\n  overrunBy(el) {\n    if(el.constructor.className !== Player.className) {\n      // this.alien.visible = false\n      // this.alien.alpha = 0.5\n      this.alien?.destroy()\n      this.level.onCharacterDie(this)\n    }\n  }\n}\n\nEnemy.className = 'Enemy'\n","import Character from './Character'\nimport Enemy from './Enemy'\nimport { DIRS } from '../../utils/constants'\n\nexport default class Player extends Character {\n  constructor(id, level) {\n    super(id, level)\n    this.power = 0.5\n    this.moveIntentDir = ''\n\n    const scene = level.scene\n    scene.input.keyboard.removeListener('keydown', this.onKeyDown.bind(this))\n    scene.input.keyboard.addListener('keydown', this.onKeyDown.bind(this))\n\n    scene.input.keyboard.removeListener('keyup', this.onKeyUp.bind(this))\n    scene.input.keyboard.addListener('keyup', this.onKeyUp.bind(this))\n  }\n  onKeyUp(event) {\n    if (this.moveIntentDir === event.key) {\n      this.moveIntentDir = ''\n      this.pushingDirection = null\n    }\n  }\n  onKeyDown(event) {\n    if(!event.repeat && [DIRS.UP, DIRS.DOWN, DIRS.LEFT, DIRS.RIGHT].includes(event.key)) {\n      this.moveIntentDir = event.key;\n      // calls loop to avoid delay between key press and visual movement at the begining of next loop\n      if(!this.isMoving) {\n        this.level.playerLoop()\n      }\n    }\n  }\n  destroy() {\n    const scene = this.level.scene\n    // animate die\n    scene.input.keyboard.off('keydown')\n    scene.input.keyboard.off('keyup')\n  }\n\n  die() {\n    this.inactive = true\n    this.alien.alpha = 0.5\n    this.destroy()\n  }\n\n  overrunBy(el) {\n    this.die()\n  }\n  runningOver(el) {\n    if(el.constructor.className === Enemy.className) {\n      this.die()\n    }\n  }\n}\n\nPlayer.className = 'Player'\n","import GameObject from './GameObject'\n\nexport default class Wall extends GameObject {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: true,\n      isBreakable: false,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n  }\n}\n\nWall.className = 'Wall'\n","import { PIXEL_TO_TILEMAP_POSITION, PIXEL_NAME } from '../../utils/constants'\nimport Destroyable from './Destroyable'\n\nexport default class Ground extends Destroyable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: true,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: false,\n      level\n    })\n    this.strength = 1\n  }\n\n  overrunBy(el) {\n    super.overrunBy(el)\n    // assume is player who overruns ground\n    const layer = this.level.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    map.putTileAt(PIXEL_TO_TILEMAP_POSITION[PIXEL_NAME.EMPTY], this.position.x, this.position.y)\n  }\n}\n\nGround.className = 'Ground'\n","export default class Empty {\n  constructor(id, level) {\n    this.id = id\n    this.level = level\n    this.isEmpty = true\n  }\n  setPosition(coords) {\n    this.position = coords\n  }\n}\n\nEmpty.className = 'Empty'\n","import Empty from './Empty'\nimport Player from './Player'\n\nexport default class Interactive extends Empty {\n  overrunBy(el) {\n    console.log('Interactive overrunBy el', el)\n    if (el.constructor.className === Player.className) {\n      this.level.onInteractWith(this)\n    }\n  }\n}\n\nInteractive.className = 'Interactive'\n","import Fallable from './Fallable'\n\nexport default class Barrel extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n  }\n  explode() {\n    // this.alien.alpha = 0.5\n    this.alien.destroy()\n    this.level.onExplode(this)\n  }\n  overrunBy(el) {\n    this.explode()\n  }\n}\nBarrel.className = 'Barrel'\n\n","import GameObject from './GameObject'\nimport Empty from './Empty'\nimport { PIXEL_NAME, TICK_TIME } from '../../utils/constants'\n\nexport default class Explosion extends GameObject {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: true,\n      isPickable: false,\n      isCrushable: true,\n      level\n    })\n    this.power = 10\n  }\n  setPosition(x, y) {\n    this.position = { x, y }\n    \n    const layer = this.level.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    const explosion = this.level.scene.add.graphics({ fillStyle: { color: 0xff0000, alpha: 1 } })\n    explosion.fillRect(0, 0, map.tileWidth, map.tileHeight)\n    explosion.setScale(layer.scaleX)\n\n    explosion.x = map.tileToWorldX(x)\n    explosion.y = map.tileToWorldY(y)\n\n    this.level.scene.tweens.add({\n      targets: explosion,\n      alpha: 0,\n      duration: TICK_TIME,\n      onComplete: () => {\n        explosion.destroy()\n        this.level.objects[y][x] = new Empty(PIXEL_NAME.EMPTY, this.level)\n      }\n    });\n    \n    this.alien = explosion\n    \n  }\n}\n\nExplosion.className = 'Explosion'\n","import Fallable from './Fallable'\nimport Player from './Player'\n\nexport default class Jewel extends Fallable {\n  constructor(id, level) {\n    super({\n      id,\n      isRigid: false,\n      isBreakable: true,\n      isFlat: false,\n      isPickable: true,\n      isCrushable: false,\n      level\n    })\n    this.strength = 4\n  }\n  overrunBy(el) {\n    if(el.constructor.className === Player.className) {\n      this.alien.visible = false\n      // this.alien.alpha = 0.5\n      this.level.onJewelPick(this)\n    } else {\n      super.overrunBy(el)\n    }\n  }\n}\n\nJewel.className = 'Jewel'\n","import Phaser from 'phaser'\nimport { TICK_TIME, PLAYER_TICK_TIME, PIXEL_NAME, DIRS, PIXEL_TO_TILEMAP_POSITION } from \"../../utils/constants\"\nimport {\n  Player,\n  Boulder,\n  Wall,\n  Empty,\n  Ground,\n  Barrel,\n  Enemy,\n  Interactive,\n  Jewel,\n  Explosion,\n} from '../objects'\n\nclass Level {\n  constructor(config) {\n    this.config = config\n    this.moveables = []\n    this.objects = []\n    this.scene = null\n    this.player = null\n    this.playerTimeoutId = 0\n    this.isPaused = false\n  }\n\n  connectToScene(phaserScene) {\n    this.scene = phaserScene\n    const layer = this.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    \n\n    this.objects = this.config.map((r, y) => r.map((c, x) => {\n      // factory\n      let element\n      switch(c) {\n        case PIXEL_NAME.WALL:\n          element = new Wall(c, this)\n          element.setPosition({ x, y })\n          break;\n        case PIXEL_NAME.GROUND:\n          element = new Ground(c, this)\n          element.setPosition({ x, y })\n          break;\n        case PIXEL_NAME.BOULDER:\n          const boulder = this.scene.add.sprite(48, 16).setOrigin(0, 0.25).play('boulder_idle')\n          boulder.setScale(layer.scaleX)\n          boulder.x = map.tileToWorldX(x)\n          boulder.y = map.tileToWorldY(y)\n          \n          element = new Boulder(c, this)\n          element.alien = boulder\n          break;\n        case PIXEL_NAME.JEWEL:\n          const jewel = this.scene.add.graphics({ fillStyle: { color: 0xffff00, alpha: 1 } })\n          jewel.setScale(layer.scaleX)\n          // jewel.fillRect(0, 0, map.tileWidth * layer.scaleX, map.tileHeight * layer.scaleY)\n          jewel.fillRect(0, 0, map.tileWidth, map.tileHeight)\n\n          jewel.x = map.tileToWorldX(x)\n          jewel.y = map.tileToWorldY(y)\n          \n          element = new Jewel(c, this)\n          element.alien = jewel\n          break;\n        case PIXEL_NAME.BARREL:\n          const barrel = this.scene.add.graphics({ fillStyle: { color: 0x663300, alpha: 1 } })\n          barrel.setScale(layer.scaleX)\n          // barrel.fillRect(0, 0, map.tileWidth * layer.scaleX, map.tileHeight * layer.scaleY)\n          barrel.fillRect(0, 0, map.tileWidth, map.tileHeight)\n\n          barrel.x = map.tileToWorldX(x)\n          barrel.y = map.tileToWorldY(y)\n          \n          element = new Barrel(c, this)\n          element.alien = barrel\n          break;\n        case PIXEL_NAME.PLAYER:\n          const player = this.scene.add.sprite(48, 16).setOrigin(0, 0.25).play('brave_idle')\n          player.setScale(layer.scaleX)\n          player.x = map.tileToWorldX(x)\n          player.y = map.tileToWorldY(y)\n\n          player.name = 'brave'\n          player.on(Phaser.Animations.Events.ANIMATION_COMPLETE, () => {\n            if(!player.isMoving) {\n              // player.play('brave_idle')\n            }\n          })\n\n          element = new Player(c, this)\n          element.alien = player\n\n          // add shortcut reference\n          this.player = element\n          break;\n        case PIXEL_NAME.ENEMY:\n          const enemy = this.scene.add.graphics({ fillStyle: { color: 0xff0000, alpha: 1 } })\n          enemy.fillRect(0, 0, map.tileWidth, map.tileHeight)\n          enemy.setScale(layer.scaleX)\n          this.scene.addToScalables(enemy, { x, y })\n          enemy.x = map.tileToWorldX(x)\n          enemy.y = map.tileToWorldY(y)\n          element = new Enemy(c, this)\n          element.alien = enemy\n          break;\n        case PIXEL_NAME.INTERACTION:\n          element = new Interactive(c, this)\n          break;\n        default:\n          element = new Empty(c, this);\n\n      }\n      element.setPosition({ x, y })\n      if (!this.objectIsEmpty(element) && !element.isRigid) {\n        // enters backward to start evaluating lower elements into gravityLoop\n        // this.moveables.unshift(element)\n        this.moveables.push(element)\n      }\n      this.onAddElement(element)\n      return element\n    }))\n  }\n\n  gravityLoop() {\n    if(this.isPaused) { return }\n    this.moveables.sort((a, b) => a.position.y - b.position.y).forEach(el => {\n      const canFallDown = el.canFallDown()\n      const canFallLeft = el.canFallLeft()\n      const canFallRight = el.canFallRight()\n      let nextPos\n      if(canFallDown) {\n        nextPos = { x: el.position.x, y: el.position.y + 1 }\n        el.isFalling++\n      }\n      if (!canFallDown && canFallLeft) {\n        nextPos = { x: el.position.x - 1, y: el.position.y}\n        if(el.isFalling) {\n          nextPos.y ++\n        }\n        el.isFalling++\n      }\n      if (!canFallDown && !canFallLeft && canFallRight) {\n        nextPos = { x: el.position.x + 1, y: el.position.y}\n        if(el.isFalling) {\n          nextPos.y ++\n        }\n        el.isFalling++\n      }\n\n      if (nextPos) {\n        this.moveObject(el, nextPos)\n      } else {\n        if(el.isFalling && el.constructor.className === Barrel.className) {\n          el.explode()\n        }\n        el.isFalling = 0\n      }\n    })\n\n    this.enemiesLoop()\n  }\n  enemiesLoop() {\n\n    if(this.isPaused) { return }\n    let nextPos, neighbour, isDestinationEmpty, isPerpToAnchor, newAnchor, nextDir, backToTrackDir, nextAnchorPos\n    \n    const helperDirCalc = (enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos) => {\n      neighbour = this.getObjectAt(nextPos.x, nextPos.y)\n      isDestinationEmpty = this.objectIsEmpty(neighbour) || neighbour?.constructor.className === Player.className // this.isDestinationEmpty(nextPos.x, nextPos.y)\n      if (!isDestinationEmpty && !enemy.anchorPosition) {\n        enemy.anchorPosition = neighbour.position\n        // counter clockwise\n        enemy.moveIntentDir = nextDir\n      }\n      if (isDestinationEmpty && neighbour.constructor.className === Player.className) {\n        this.moveObject(enemy, nextPos)\n      }\n      if (isDestinationEmpty) {\n        if (!enemy.anchorPosition) {\n          enemy.moveIntentDir = nextDir\n          return\n        }\n        isPerpToAnchor = enemy.position.x === enemy.anchorPosition.x || enemy.position.y === enemy.anchorPosition.y\n        // scenario 1: enemy is perpendicular to anchor\n        if (isPerpToAnchor) {\n          // updates anchor counter clockwise\n          newAnchor = this.getObjectAt(nextAnchorPos.x, nextAnchorPos.y)\n          if (!this.objectIsEmpty(newAnchor) && newAnchor?.constructor.className !== Player.className) {\n            enemy.anchorPosition = newAnchor.position\n          } else {\n            enemy.moveIntentDir = backToTrackDir\n          }\n        }\n        this.moveObject(enemy, nextPos)\n      } else {\n        enemy.anchorPosition = neighbour.position\n        enemy.moveIntentDir = nextDir\n      }\n    }\n    this.moveables\n    .filter(el => el.constructor.className === Enemy.className)\n    .forEach(enemy => {\n      // potential path finding mechanism @see https://github.com/qiao/PathFinding.js\n      // if(!enemy.path) {\n      //   const grid = new window.PF.Grid(this.objects.map(row => row.map(el => el.isEmpty ? 0 : 1)));\n      //   enemy.pathfinder = new window.PF.AStarFinder();\n      //   const path = enemy.pathfinder.findPath(enemy.position.x, enemy.position.y, thi.player.position.x, this.player.position.y, grid);\n      // }\n      switch(enemy.moveIntentDir) {\n        case DIRS.UP:\n          nextPos = { x: enemy.position.x, y: enemy.position.y - 1}\n          nextDir = DIRS.LEFT\n          backToTrackDir = DIRS.RIGHT\n          nextAnchorPos = { x: nextPos.x + 1, y: nextPos.y }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break;\n        case DIRS.RIGHT:\n          nextPos = { x: enemy.position.x + 1, y: enemy.position.y}\n          nextDir = DIRS.UP\n          backToTrackDir = DIRS.DOWN\n          nextAnchorPos = { x: nextPos.x, y: nextPos.y + 1 }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break;\n        case DIRS.DOWN:\n          nextPos = { x: enemy.position.x, y: enemy.position.y + 1}\n          nextDir = DIRS.RIGHT\n          backToTrackDir = DIRS.LEFT\n          nextAnchorPos = { x: nextPos.x - 1, y: nextPos.y }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break;\n        case DIRS.LEFT:\n          nextPos = { x: enemy.position.x - 1, y: enemy.position.y}\n          nextDir = DIRS.DOWN\n          backToTrackDir = DIRS.UP\n          nextAnchorPos = { x: nextPos.x, y: nextPos.y - 1 }\n          helperDirCalc(enemy, nextPos, nextDir, backToTrackDir, nextAnchorPos)\n          \n          break;\n\n        default:\n          break;\n      }\n    })\n  }\n  playerLoop() {\n    if(this.isPaused || this.player.inactive) { return }\n    clearTimeout(this.playerTimeoutId)\n    const player = this.player\n    \n    const nextPos = { x: player.position.x, y: player.position.y }\n    switch(player.moveIntentDir) {\n      case DIRS.UP:\n        if(player.canMoveUp()) nextPos.y -= 1\n        break;\n      case DIRS.DOWN:\n        if(player.canMoveDown()) nextPos.y += 1\n        break;\n      case DIRS.LEFT:\n        if(player.canMoveLeft()) nextPos.x -= 1\n        break;\n      case DIRS.RIGHT:\n        if(player.canMoveRight()) nextPos.x += 1\n        break;\n      default:break;\n    }\n    if ((player.position.x !== nextPos.x || player.position.y !== nextPos.y) && !player.isMoving) {\n      player.isMoving = true\n      if (player.position.x < nextPos.x) {\n        player.alien.setOrigin(0, 0.25)\n        player.alien.setFlipX(false)\n      }\n      if (player.position.x > nextPos.x) {\n        player.alien.setFlipX(true)\n        player.alien.setOrigin(0.25, 0.25)\n      }\n      player.alien.emit('player_moves', nextPos)\n      this.moveObject(player, nextPos)\n    }\n\n    this.playerTimeoutId = setTimeout(() => {\n      player.isMoving = false\n      player.alien.play('brave_idle')\n      if(player.moveIntentDir !== '') {\n        this.playerLoop()\n      }\n    }, PLAYER_TICK_TIME);\n  }\n  // afterPlayerLoop(cb) {\n  //   this.afterPlayerLoopCallbacks.push(cb)\n  // }\n  moveObject(el, pos) {\n    const layer = this.scene.children.getByName('layer_1')\n    const { tilemap: map } = layer\n    const origin = { x: el.position.x, y: el.position.y }\n    // assume destination is occupeable\n    const destinationElement = this.getObjectAt(pos.x, pos.y)\n    if (!this.objectIsEmpty(destinationElement) || destinationElement.constructor.className === Interactive.className) {\n      destinationElement.overrunBy(el)\n      el.runningOver(destinationElement)\n    }\n\n    if(el.inactive) return\n\n    // clear origin position\n    this.setObjectAt(origin.x, origin.y, new Empty(PIXEL_NAME.EMPTY, this))\n    // fill destination position\n    this.setObjectAt(pos.x, pos.y, el)\n    \n    // updates element position\n    el.move(pos)\n    if(el.constructor.className === Player.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: PLAYER_TICK_TIME,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          duration: PLAYER_TICK_TIME,\n        },\n      });\n      el.alien.play('brave_run')\n    }\n    if(el.constructor.className === Enemy.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          duration: TICK_TIME,\n        },\n      });\n    }\n    if(el.constructor.className === Jewel.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n    }\n    if(el.constructor.className === Barrel.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n    }\n    if(el.constructor.className === Boulder.className) {\n      // alien anim\n      this.scene.tweens.add({\n        targets: el.alien,\n        x: {\n          value: map.tileToWorldX(pos.x),\n          duration: TICK_TIME * 0.5,\n        },\n        y: {\n          value: map.tileToWorldY(pos.y),\n          delay: pos.x !== origin.x ? TICK_TIME * 0.5 : 0,\n          duration: pos.x !== origin.x ? TICK_TIME * 0.5 : TICK_TIME,\n        },\n        // duration: TICK_TIME,\n      });\n      if (pos.x !== origin.x) {\n        el.alien.play(pos.x > origin.x ? 'boulder_roll_right' : 'boulder_roll_left')\n      }\n    }\n  }\n  pause() {\n    this.isPaused = true\n  }\n  resume() {\n    this.isPaused = false\n  }\n  onCharacterDie(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n    if (el.constructor.className === Player.className) {\n      // this.player = null\n    }\n  }\n  onJewelPick(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n  }\n  onDestroy(el) {\n    if(el.constructor.className === Boulder.className) {\n      // console.log(el);\n    }\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n  }\n  onExplode(el) {\n    this.setObjectAt(el.position.x, el.position.y,  new Empty(PIXEL_NAME.EMPTY, this))\n    this.moveables = this.moveables.filter(e => e !== el)\n    for(let x = el.position.x - 2; x <= el.position.x + 2; x++) {\n      for(let y = el.position.y - 2; y < el.position.y + 2; y++) {\n        const el = this.getObjectAt(x, y)\n        const explosion = new Explosion(PIXEL_NAME.EXPLOSION, this)\n        if(el.isBreakable || this.objectIsEmpty(el)) {\n          explosion.setPosition(x, y)\n          this.objects[y][x] = explosion\n        }\n        if (el && !this.objectIsEmpty(el)){\n          el.overrunBy(explosion)\n        }\n      }\n    }\n  }\n  onComplete() {\n    this.objects.forEach(row => row.forEach(el => {\n      if(el !== this.player && el.alien) {\n        el.alien.destroy()\n      }\n    }))\n    this.pause()\n    this.scene.events.emit('levelcompleted', this)\n    // this.moveables = []\n    // this.objects.map(el => el.alien?.destroy())\n  }\n  onInteractWith(el) {\n    console.warn(`implement interaction for ${this.id}`)\n  }\n  onAddElement(el) {\n    console.warn(`implement element added ${this.id}`)\n  }\n  getPlayerPos() { return this.player.position}\n  getConfigAt(x, y) {\n    return this.isDestinationInBounds(x, y) && this.config[y][x]\n  }\n  getCoords(id) {\n    const found = []\n    for(let i = 0; i < this.config.length; i++) {\n      for(let j = 0; j < this.config[i].length; j++) {\n        if (this.config[i][j] === id) {\n          found.push({x: j, y: i})\n        }\n      }\n    }\n    return found\n  }\n  getObjectAt(x, y) {\n    return this.isDestinationInBounds(x, y) && this.objects[y][x]\n  }\n  setObjectAt(x, y, obj) {\n    this.objects[y][x] = obj\n  }\n  isPositionClear(x, y) {\n    return this.getObjectAt(x, y).isEmpty\n  }\n  isDestinationInBounds(x, y) {\n    const xInBounds = x < this.config[0].length && x >= 0\n    const yInBounds = y < this.config.length && y >= 0\n    return xInBounds && yInBounds\n  }\n  objectIsEmpty(el) {\n    return el.isEmpty\n  }\n  isDestinationEmpty(x, y) {\n    return this.getObjectAt(x, y).isEmpty\n  }\n}\n\nexport default Level\n","import Phaser from 'phaser'\nimport { PIXEL_NAME, PIXEL_TO_TILEMAP_POSITION } from '../utils/constants'\nimport Level1 from './levels/level_1'\nimport Level2 from './levels/level_2'\n\nconst LEVELS = [Level1, Level2]\n\nexport default class LevelManager {\n  constructor(scene, currentLevel = 0) {\n    this.scene = scene\n    this.currentIndex = currentLevel - 1\n    this.current = LEVELS[this.currentIndex]\n    this.start()\n  }\n  \n  start() {\n    this.current = LEVELS[this.currentIndex]\n    this.current.config = this.generateConfig()\n    this.map = this.createMap()\n    this.current.connectToScene(this.scene)\n    this.current.pause()\n    this.scene.cameras.main.once('camerafadeincomplete', () => {\n      this.current.resume()\n    })\n  }\n\n  next() {\n    // destroy and unload\n    this.currentIndex += 1\n    if (LEVELS[this.currentIndex]) {\n      this.start()\n    } else {\n      this.scene.scene.start('MenuScene')\n    }\n\n  }\n\n  generateConfig() {\n    const scene = this.scene\n    const levelId = this.current.id\n    var texture = scene.textures.get(levelId);\n    var image = texture.getSourceImage();\n    const levelConfig = Array(image.height).fill('000000').map(r => Array(image.width).fill('000000'))\n    for(let j = 0; j < image.width; j++) {\n      for(let i = 0; i < image.height; i++) {\n        const pixColor = scene.textures.getPixel(j, i, levelId)\n        const key = `${Phaser.Display.Color.ComponentToHex(pixColor.r)}${Phaser.Display.Color.ComponentToHex(pixColor.g)}${Phaser.Display.Color.ComponentToHex(pixColor.b)}`\n        levelConfig[i][j] = key\n      }\n    }\n    return levelConfig\n  }\n\n  createMap() {\n    const scene = this.scene\n    const levelData = this.current\n    const SCALE = scene.data.get('custom_scale')\n    const camera = this.scene.cameras.main\n\n    let map = this.map\n    if(map && map.scene) {\n      map.destroy()\n    }\n\n    // Creating a blank tilemap with dimensions matching the dungeon\n    map = scene.make.tilemap({ tileWidth: 20, tileHeight: 20, width: levelData.config[0].length, height: levelData.config.length });\n\n    // addTilesetImage: function (tilesetName, key, tileWidth, tileHeight, tileMargin, tileSpacing, gid)\n    let tileset = map.addTilesetImage('tiles', 'main-tiles', 20, 20, 1, 2);\n\n    let layer = map.createBlankLayer('layer_1', tileset);\n    layer.name = 'layer_1'\n    layer.depth = 0\n\n    layer.setScale(SCALE)\n\n    // Fill with black tiles\n    layer.fill(1)\n\n    levelData.config.forEach((row, x) => {\n      row.forEach((el, y) => {\n        const tile = levelData.config[x][y]\n        if (![PIXEL_NAME.EMPTY, PIXEL_NAME.PLAYER, PIXEL_NAME.BOULDER, PIXEL_NAME.INTERACTION].includes(tile)) {\n          if (tile === PIXEL_NAME.WALL) {\n            const tile = PIXEL_TO_TILEMAP_POSITION.calculateWallTileWithNeighbours(x, y, levelData.config)\n            map.putTileAt(tile, y, x)\n          } else {\n            map.putTileAt(PIXEL_TO_TILEMAP_POSITION[tile], y, x)\n          }\n        } else {\n          map.putTileAt(PIXEL_TO_TILEMAP_POSITION[PIXEL_NAME.EMPTY], y, x)\n        }\n      })\n    })\n\n    // set up camera\n    camera.setBounds(0, 0, layer.width * layer.scaleX, layer.height * layer.scaleY);\n    camera.zoom = 1\n\n    return map\n  }\n}","import LevelBase from './levelBase'\n\nclass Level1 extends LevelBase {\n  constructor() {\n    super()\n    this.id = 'level_1'\n    this.name = 'The beginning'\n  }\n\n  connectToScene(scene) {\n    super.connectToScene(scene)\n    scene.cameras.main.once('camerafadeincomplete', () => {\n      alert('INTRO MESSAGE, \"Guess I can move those boulders\"')\n    })\n  }\n\n  onInteractWith(el) {\n    if(el.position.x === 18 && el.position.y === 14) {\n      alert('>>> Level 1 completed <<<')\n      this.onComplete()\n    }\n  }\n}\n\nexport default new Level1()\n","import LevelBase from './levelBase'\nimport { Interactive } from '../objects'\n\nclass Level2 extends LevelBase {\n  constructor() {\n    super()\n    this.id = 'level_2'\n    this.name = 'The finding'\n  }\n\n  // connectToScene(scene) {\n  //   super.connectToScene(scene)\n  //   scene.cameras.main.once('camerafadeincomplete', () => {\n  //     alert('INTRO MESSAGE, \"Guess I can move those boulders\"')\n  //   })\n  // }\n\n  onInteractWith(el) {\n    if(el.position.x === 6 && el.position.y === 6) {\n      this.player.moveIntentDir = ''\n      alert('FIRST CLUE, \"Hmm, these walls looks different. Like someone have put them here.\"')\n    }\n    if(el.position.x === 5 && el.position.y === 12) {\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      this.player.moveIntentDir = ''\n      alert('FIRST TOOL, \"Great! Now, with this pickaxe I can break all those clods\"')\n      this.player.power = 1\n      map.putTileAt(19, el.position.x, el.position.y)\n    }\n    if(el.position.x === 19 && el.position.y === 1) {\n      alert('>>> Level 2 completed <<<')\n      this.onComplete()\n    }\n  }\n\n  onAddElement(el) {\n    if(el.constructor.className === Interactive.className && el?.position.x === 5 && el?.position.y === 12) {\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      map.putTileAt(54, el.position.x, el.position.y)\n    }\n  }\n}\n\nexport default new Level2()\n","import Phaser from 'phaser'\nimport { TICK_TIME } from '../utils/constants'\n\nexport default class Rules {\n  constructor(scene) {\n    this.scene = scene\n    console.log('NEW RULES')\n    // gravity loop\n    this.timer = 0\n    this.worldTickFreq = TICK_TIME\n    scene.events.removeListener(this.onSceneUpdate)\n    scene.events.addListener(Phaser.Scenes.Events.UPDATE, this.onSceneUpdate.bind(this))\n\n    this.setUpPuseResumeGame()\n    this.setUpCameraFollowPlayer()\n    scene.events.off('levelcompleted')\n    scene.events.on('levelcompleted', () => {\n      scene.cameras.main.fade(1000, 0, 0)\n      scene.cameras.main.once('camerafadeoutcomplete', () => {\n        this.scene.levels.next()\n        scene.cameras.main.fadeIn(1000, 0, 0)\n      })\n    })\n  }\n\n  setUpCameraFollowPlayer() {\n    this.scene.events.addListener(Phaser.Scenes.Events.UPDATE, () => {\n      const cam = this.scene.cameras.main\n      const layer = this.scene.children.getByName('layer_1')\n      const { tilemap: map } = layer\n      const {x, y} = this.scene.levels.current.getPlayerPos()\n      if (cam && map) {\n        var smoothFactor = 0.9;\n  \n        cam.scrollX = smoothFactor * cam.scrollX + (1 - smoothFactor) * (map.tileToWorldX(x) - cam.width * 0.5);\n        cam.scrollY = smoothFactor * cam.scrollY + (1 - smoothFactor) * (map.tileToWorldY(y) - cam.height * 0.5);\n      }\n    })\n  }\n\n  setUpPuseResumeGame() {\n    this.scene.input.keyboard.removeListener('keydown', this.onKeyDown.bind(this))\n    this.scene.input.keyboard.addListener('keydown', this.onKeyDown.bind(this))\n  }\n  onKeyDown(event) {\n    const pauseGame = () => {\n      this.scene.levels.current.pause()\n      this.scene.events.emit('game_paused')\n    }\n    const resumeGame = () => {\n      this.scene.levels.current.resume()\n      this.scene.events.emit('game_resumed')\n    }\n    if(event.key === 'Escape') {\n      const action = this.scene.levels.current.isPaused ? resumeGame : pauseGame\n      action()\n    }\n  }\n\n  onSceneUpdate(time, delta) {\n    this.timer += delta\n    if (this.timer >= this.worldTickFreq) {\n      while (this.timer > this.worldTickFreq) {\n          this.timer -= this.worldTickFreq\n      }\n      this.scene.levels.current.gravityLoop()\n    }\n  }\n}\n","export default class UI {\n  constructor(scene) {\n    this.scene = scene\n    this.scene.events.off('game_paused')\n    this.scene.events.on('game_paused', () => alert('Game paused, press ESC to resume'))\n    this.scene.events.off('game_resumed')\n    this.scene.events.on('game_resumed', () => alert('Game resumes now'))\n  }\n}","import Phaser from 'phaser'\nimport { TILES_BY_SCREEN, TILE_SIZE, TICK_TIME } from '../utils/constants';\nimport LevelManager from '../components/LevelManager'\nimport Rules from '../components/Rules'\nimport UI from '../components/UI'\n\nconst SCALE = Math.round((window.innerWidth/TILES_BY_SCREEN * 100 / TILE_SIZE/100)*100)/100\n\nexport default class GameScene extends Phaser.Scene {\n  constructor () {\n    super('GameScene');\n  }\n\n  create(data = {}) {\n    this.data.set('custom_scale', SCALE)\n\n    this.game.scale.scaleMode = Phaser.Scale.RESIZE\n    this.handleScales()\n    this.createAnimations()\n    this.levels = new LevelManager(this, data.level)\n\n    this.cameras.main.fadeIn(1000, 0, 0, 0)\n    new Rules(this)\n    new UI(this)\n  }\n  \n  handleScales() {\n    const SCALE = this.data.get('custom_scale')\n    const scalables = new Map()\n    this.clearScalables = () => void scalables.clear()\n      this.removeFromScalables = el => scalables.delete(el)\n      this.addToScalables = (el, coords) => {\n        el.setScale(SCALE)\n        scalables.set(el, coords)\n      }\n      this.updateScale = scale => {\n        scalables.forEach((coords, el) => el?.setScale(scale))\n      }\n      window.addEventListener('resize', () => {\n        const scale = Math.round((window.innerWidth/TILES_BY_SCREEN * 100 / TILE_SIZE/100)*100)/100\n        const layer = this.scene.children.getByName('layer_1')\n        const { tilemap: map } = layer\n        layer.setScale(scale)\n        // this.children.list.forEach(el => {\n        //   if(el.type === 'TilemapLayer') {\n        //     el.setScale(scale)\n        //   }\n        // })\n        this.data.get('level').objects.forEach((rows, y) => {\n          rows.forEach((obj, x) => {\n            if(obj.alien) {\n              obj.alien.setScale(scale)\n              obj.alien.x = map.tileToWorldX(x)\n              obj.alien.y = map.tileToWorldY(y)\n            }\n          })\n        })\n        const camera = this.cameras.main\n        camera.setBounds(0, 0, layer.width * layer.scaleX, layer.height * layer.scaleY);\n      })\n  }\n\n  createAnimations() {\n    this.anims.create({\n        key: 'boulder_roll_right',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0, 1, 2, 0 ] }),\n        frameRate: 12,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'boulder_roll_left',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0, 2, 1, 0 ] }),\n        frameRate: 12,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'boulder_idle',\n        frames: this.anims.generateFrameNumbers('boulder', { frames: [ 0 ] }),\n        frameRate: 1,\n        repeat: 0\n      })\n      this.anims.create({\n        key: 'brave_idle',\n        frames: this.anims.generateFrameNumbers('brave', { frames: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 0 ] }),\n        frameRate: 4,\n        repeat: -1\n      })\n      this.anims.create({\n        key: 'brave_run',\n        frames: this.anims.generateFrameNumbers('brave', { frames: [ 3, 4, 5, 3 ] }),\n        frameRate: (1000/TICK_TIME) * 4,\n        repeat: 0\n      })\n  }\n}","import Phaser from 'phaser'\nimport Canvas from './libs/react-phaser-fiber/components/Canvas'\nimport MenuScene from './scenes/MenuScene'\nimport IntroScene from './scenes/IntroScene'\nimport GameScene from './scenes/GameScene'\n\nconst gameConfig = {\n  width: \"100%\",\n  height: \"100%\",\n  type: Phaser.AUTO,\n  backgroundColor: '#000000',\n  disableContextMenu: true,\n  pixelArt: true,\n  roundPixels: false,\n  scene: [MenuScene, IntroScene, GameScene]\n}\nfunction Game() {\n  return (\n    <Canvas args={gameConfig} />\n  );\n}\n\nexport default Game;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport reportWebVitals from './reportWebVitals';\nimport config from '../package.json'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n    <div style={{\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      fontSize: 10,\n      color: 'gray'\n    }}>v{config.version}</div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}